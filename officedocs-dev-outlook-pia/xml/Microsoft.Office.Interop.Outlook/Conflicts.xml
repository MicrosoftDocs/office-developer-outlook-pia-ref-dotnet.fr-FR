<Type Name="Conflicts" FullName="Microsoft.Office.Interop.Outlook.Conflicts">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3504a30b96a752a815c2c8ae8507b8f75ba9590f" /><Meta Name="ms.sourcegitcommit" Value="edbc1e709f796342c771b5226636c7e9dde40a82" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="06/25/2021" /><Meta Name="ms.locfileid" Value="53139473" /></Metadata><TypeSignature Language="C#" Value="public interface Conflicts : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Conflicts implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook.Conflicts" />
  <TypeSignature Language="VB.NET" Value="Public Interface Conflicts&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Conflicts : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000630C2-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ba6ba-101">Contient une collection d’objets qui représentent tous les éléments Outlook Microsoft qui sont en conflit avec un <see cref="T:Microsoft.Office.Interop.Outlook.Conflict" /> élément Outlook particulier.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-101">Contains a collection of <see cref="T:Microsoft.Office.Interop.Outlook.Conflict" /> objects that represent all Microsoft Outlook items that are in conflict with a particular Outlook item.</span></span></summary>
    <remarks><para><span data-ttu-id="ba6ba-102">Utilisez la <see cref="P:Microsoft.Office.Interop.Outlook._MailItem.Conflicts" /> propriété de n’importe quel Outlook, par <see cref="T:Microsoft.Office.Interop.Outlook.MailItem" /> exemple, pour renvoyer <b>l’objet</b> Conflicts.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-102">Use the <see cref="P:Microsoft.Office.Interop.Outlook._MailItem.Conflicts" /> property of any Outlook item, such as <see cref="T:Microsoft.Office.Interop.Outlook.MailItem" />, to return the <b>Conflicts</b> object.</span></span></para>
      <para><span data-ttu-id="ba6ba-103">Utilisez la <see cref="P:Microsoft.Office.Interop.Outlook.Conflicts.Count" /> propriété de <b>l’objet Conflicts</b> pour déterminer si l’élément est impliqué dans un conflit.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-103">Use the <see cref="P:Microsoft.Office.Interop.Outlook.Conflicts.Count" /> property of the <b>Conflicts</b> object to determine if the item is involved in a conflict.</span></span> <span data-ttu-id="ba6ba-104">Une valeur différente de zéro indique la présence d'un conflit.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-104">A non-zero value indicates conflict.</span></span></para>
      <para><span data-ttu-id="ba6ba-105">Utilisez la propriété (dans C#) pour récupérer un élément conflictuelle particulier à partir de <see cref="P:Microsoft.Office.Interop.Outlook.Conflicts.Item(System.Object)" /> <b>l’objet</b> de collection Conflicts.<b></b></span><span class="sxs-lookup"><span data-stu-id="ba6ba-105">Use the <see cref="P:Microsoft.Office.Interop.Outlook.Conflicts.Item(System.Object)" /> property (<b>this</b> in C#)to retrieve a particular conflict item from the <b>Conflicts</b> collection object.</span></span></para>
      <para><span data-ttu-id="ba6ba-106">Utilisez le <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetFirst" /> , et les méthodes pour parcourir la collection <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetNext" /> <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetPrevious" /> <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetLast" /> <b>Conflicts.</b></span><span class="sxs-lookup"><span data-stu-id="ba6ba-106">Use the <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetFirst" />, <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetNext" />, <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetPrevious" />, and <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetLast" /> methods to traverse the <b>Conflicts</b> collection.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Conflicts.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Application ^ Application { Microsoft::Office::Interop::Outlook::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba6ba-107">Renvoie un <see cref="T:Microsoft.Office.Interop.Outlook.Application" /> objet qui représente l’application Outlook parent pour l’objet.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-107">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Application" />  object that represents the parent Outlook application for the  object.</span></span> <span data-ttu-id="ba6ba-108">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-108">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlObjectClass Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlObjectClass Class" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Conflicts.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As OlObjectClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlObjectClass Class { Microsoft::Office::Interop::Outlook::OlObjectClass get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlObjectClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba6ba-109">Renvoie une <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constante indiquant la classe de l’objet.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-109">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constant indicating the object's class.</span></span> <span data-ttu-id="ba6ba-110">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-110">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Conflicts.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(80)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(80)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba6ba-111">Renvoie une <b>valeur integer</b> <b>(int</b> in C#) indiquant le nombre d’objets de la collection spécifiée.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-111">Returns an <b>Integer</b> (<b>int</b> in C#) value indicating the count of objects in the specified collection.</span></span> <span data-ttu-id="ba6ba-112">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-112">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirst">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Conflict GetFirst ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Outlook.Conflict GetFirst() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook.Conflicts.GetFirst" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirst () As Conflict" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Outlook::Conflict ^ GetFirst();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(86)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Conflict</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba6ba-113">Renvoie le premier objet de la <see cref="T:Microsoft.Office.Interop.Outlook.Conflicts" /> collection.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-113">Returns the first object in the <see cref="T:Microsoft.Office.Interop.Outlook.Conflicts" /> collection.</span></span></summary>
        <returns><span data-ttu-id="ba6ba-114">Objet <see cref="T:Microsoft.Office.Interop.Outlook.Conflict" /> qui représente le premier objet contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-114">A <see cref="T:Microsoft.Office.Interop.Outlook.Conflict" /> object that represents the first object contained by the collection.</span></span></returns>
        <remarks><para><span data-ttu-id="ba6ba-115">Renvoie <b>nothing</b> si aucun premier objet n’existe, par exemple, s’il n’y a aucun objet dans la collection. Pour garantir le fonctionnement correct de <b>GetFirst</b>, et des méthodes dans une grande collection, appelez GetFirst avant d’appeler GetNext sur cette collection et appelez GetLast avant d’appeler <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetLast" /> <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetNext" /> <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetPrevious" /> <b>GetPrevious</b>. <b></b> <b></b> <b></b></span><span class="sxs-lookup"><span data-stu-id="ba6ba-115">Returns <b>Nothing</b> if no first object exists, for example, if there are no objects in the collection.To ensure correct operation of the <b>GetFirst</b>, <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetLast" />, <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetNext" />, and <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetPrevious" /> methods in a large collection, call <b>GetFirst</b> before calling <b>GetNext</b> on that collection and call <b>GetLast</b> before calling <b>GetPrevious</b>.</span></span> <span data-ttu-id="ba6ba-116">Pour vous assurer que vos appels portent sur la même collection, créez une variable explicite qui fait référence à la collection avant d’entrer dans la boucle.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-116">To ensure that you are always making the calls on the same collection, create an explicit variable that refers to that collection before entering the loop.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLast">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Conflict GetLast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Outlook.Conflict GetLast() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook.Conflicts.GetLast" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLast () As Conflict" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Outlook::Conflict ^ GetLast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(88)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Conflict</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba6ba-117">Renvoie le dernier objet de la <see cref="T:Microsoft.Office.Interop.Outlook.Conflicts" /> collection.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-117">Returns the last object in the <see cref="T:Microsoft.Office.Interop.Outlook.Conflicts" /> collection.</span></span></summary>
        <returns><span data-ttu-id="ba6ba-118">Objet <see cref="T:Microsoft.Office.Interop.Outlook.Conflict" /> qui représente le dernier objet contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-118">A <see cref="T:Microsoft.Office.Interop.Outlook.Conflict" /> object that represents the last object contained by the collection.</span></span></returns>
        <remarks><para> <span data-ttu-id="ba6ba-119">Elle renvoie <b>nothing</b> si aucun dernier objet n’existe, par exemple, si la collection est vide. Pour garantir le bon fonctionnement de la , GetLast , et les méthodes dans une grande collection, appelez GetFirst avant d’appeler <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetFirst" /> <b></b>GetNext sur cette collection, et appelez GetLast avant d’appeler <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetNext" /> <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetPrevious" /> <b>GetPrevious</b>. <b></b> <b></b> <b></b></span><span class="sxs-lookup"><span data-stu-id="ba6ba-119">It returns <b>Nothing</b> if no last object exists, for example, if the collection is empty.To ensure correct operation of the <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetFirst" />, <b>GetLast</b>, <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetNext" />, and <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetPrevious" /> methods in a large collection, call <b>GetFirst</b> before calling <b>GetNext</b> on that collection, and call <b>GetLast</b> before calling <b>GetPrevious</b>.</span></span> <span data-ttu-id="ba6ba-120">Pour vous assurer que vos appels portent sur la même collection, créez une variable explicite qui fait référence à la collection avant d’entrer dans la boucle.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-120">To ensure that you are always making the calls on the same collection, create an explicit variable that refers to that collection before entering the loop.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNext">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Conflict GetNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Outlook.Conflict GetNext() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook.Conflicts.GetNext" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNext () As Conflict" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Outlook::Conflict ^ GetNext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(87)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Conflict</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba6ba-121">Renvoie l’objet suivant de la <see cref="T:Microsoft.Office.Interop.Outlook.Conflicts" /> collection.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-121">Returns the next object in the <see cref="T:Microsoft.Office.Interop.Outlook.Conflicts" /> collection.</span></span></summary>
        <returns><span data-ttu-id="ba6ba-122">Objet <see cref="T:Microsoft.Office.Interop.Outlook.Conflict" /> qui représente l’objet suivant contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-122">A <see cref="T:Microsoft.Office.Interop.Outlook.Conflict" /> object that represents the next object contained by the collection.</span></span></returns>
        <remarks><para><span data-ttu-id="ba6ba-123">Elle renvoie <b>nothing</b> si aucun objet suivant n’existe, par exemple, s’il est déjà positionné à la fin de la collection. Pour garantir le fonctionnement correct des <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetFirst" /> méthodes , , , <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetLast" /> <b>GetNext</b>et dans une grande collection, appelez GetFirst avant d’appeler <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetPrevious" /> <b></b> <b>GetNext</b> sur cette collection, puis appelez <b>GetLast</b> avant d’appeler <b>GetPrevious</b>.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-123">It returns <b>Nothing</b> if no next object exists, for example, if already positioned at the end of the collection.To ensure correct operation of the <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetFirst" />, <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetLast" />, <b>GetNext</b>, and <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetPrevious" /> methods in a large collection, call <b>GetFirst</b> before calling <b>GetNext</b> on that collection, and call <b>GetLast</b> before calling <b>GetPrevious</b>.</span></span> <span data-ttu-id="ba6ba-124">Pour vous assurer que vos appels portent sur la même collection, créez une variable explicite qui fait référence à la collection avant d’entrer dans la boucle.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-124">To ensure that you are always making the calls on the same collection, create an explicit variable that refers to that collection before entering the loop.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrevious">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Conflict GetPrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Outlook.Conflict GetPrevious() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook.Conflicts.GetPrevious" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrevious () As Conflict" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Outlook::Conflict ^ GetPrevious();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(89)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Conflict</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba6ba-125">Renvoie l’objet précédent de la <see cref="T:Microsoft.Office.Interop.Outlook.Conflicts" /> collection.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-125">Returns the previous object in the <see cref="T:Microsoft.Office.Interop.Outlook.Conflicts" /> collection.</span></span></summary>
        <returns><span data-ttu-id="ba6ba-126">Objet <see cref="T:Microsoft.Office.Interop.Outlook.Conflict" /> qui représente l’objet précédent contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-126">A <see cref="T:Microsoft.Office.Interop.Outlook.Conflict" /> object that represents the previous object contained by the collection.</span></span></returns>
        <remarks><para><span data-ttu-id="ba6ba-127">Elle renvoie la fonction <b>Nothing</b> si aucun objet précédent n’existe, par exemple, si elle est déjà positionnée au début de la collection. Pour garantir le bon fonctionnement des méthodes <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetFirst" /> , et GetPrevious dans une grande collection, appelez GetFirst avant d’appeler <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetLast" /> <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetNext" /> <b></b> <b></b> <b>GetNext</b> sur cette collection, puis appelez <b>GetLast</b> avant d’appeler <b>GetPrevious</b>.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-127">It returns <b>Nothing</b> if no previous object exists, for example, if already positioned at the beginning of the collection.To ensure correct operation of the <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetFirst" />, <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetLast" />, <see cref="M:Microsoft.Office.Interop.Outlook.Conflicts.GetNext" />, and <b>GetPrevious</b> methods in a large collection, call <b>GetFirst</b> before calling <b>GetNext</b> on that collection, and call <b>GetLast</b> before calling <b>GetPrevious</b>.</span></span> <span data-ttu-id="ba6ba-128">Pour vous assurer que vos appels portent sur la même collection, créez une variable explicite qui fait référence à la collection avant d’entrer dans la boucle.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-128">To ensure that you are always making the calls on the same collection, create an explicit variable that refers to that collection before entering the loop.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Conflict this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Conflict Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Conflicts.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(Index As Object) As Conflict" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Conflict ^ default[System::Object ^] { Microsoft::Office::Interop::Outlook::Conflict ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Conflict</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="ba6ba-129">Numéro d'index de l'objet ou valeur utilisée pour établir une correspondance avec la propriété par défaut d'un objet de la collection.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-129">Either the index number of the object, or a value used to match the default property of an object in the collection.</span></span></param>
        <summary><span data-ttu-id="ba6ba-130">Renvoie un <see cref="T:Microsoft.Office.Interop.Outlook.Conflict" /> objet de la collection.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-130">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Conflict" /> object from the collection.</span></span></summary>
        <value><span data-ttu-id="ba6ba-131">Objet <b>Conflict</b> qui représente l'objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-131">A <b>Conflict</b> object that represents the specified object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Conflicts.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba6ba-p109">Renvoie la valeur de type <b>Object</b> parent de l’objet spécifié. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-p109">Returns the parent <b>Object</b> of the specified object. Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.NameSpace Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.NameSpace Session" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Conflicts.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As NameSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::NameSpace ^ Session { Microsoft::Office::Interop::Outlook::NameSpace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.NameSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba6ba-134">Renvoie <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />  l’objet de la session en cours.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-134">Returns the <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />  object for the current session.</span></span> <span data-ttu-id="ba6ba-135">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-135">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ba6ba-136">La <b>propriété Session</b> et la méthode peuvent être utilisées indifféremment pour obtenir l’objet <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> <b>NameSpace</b> de la session en cours.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-136">The <b>Session</b> property and the <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> method can be used interchangeably to obtain the <b>NameSpace</b> object for the current session.</span></span> <span data-ttu-id="ba6ba-137">Les deux membres présentent la même utilité.</span><span class="sxs-lookup"><span data-stu-id="ba6ba-137">Both members serve the same purpose.</span></span> <span data-ttu-id="ba6ba-138">Par exemple, les paires d’instructions suivantes effectuent la même fonction :</span><span class="sxs-lookup"><span data-stu-id="ba6ba-138">For example, the following pairs of statements perform the same function:</span></span></para>
          <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
          <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
          <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
          <code>Outlook.NameSpace objSession = Application.Session;</code>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>