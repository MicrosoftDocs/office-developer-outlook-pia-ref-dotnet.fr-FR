<Type Name="_Application" FullName="Microsoft.Office.Interop.Outlook._Application">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3a1a76725d5ad1aff125d99fcb70c41ea0bd31ed" /><Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/12/2019" /><Meta Name="ms.locfileid" Value="27904048" /></Metadata><TypeSignature Language="C#" Value="public interface _Application" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Application" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook._Application" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Application" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Application" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00063001-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d6ae0-101">Il s’agit d’une interface principale dans une coclasse COM qui est requis par le code managé pour l’interopérabilité avec l’objet COM correspondant.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span></span> <span data-ttu-id="d6ae0-102">Utilisez cette interface principale uniquement lorsque la méthode que vous souhaitez utiliser partageant le même nom qu’un événement de l’objet COM ; Dans ce cas, effectuez un cast à cette interface pour appeler la méthode et dans l’interface d’événements le plus récent pour se connecter à l’événement.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span></span> <span data-ttu-id="d6ae0-103">Sinon, utilisez l’interface .NET est dérivé de la coclasse COM pour accéder aux méthodes, propriétés et événements de l’objet COM.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span></span> <span data-ttu-id="d6ae0-104">Pour plus d’informations sur l’objet COM, voir <see cref="T:Microsoft.Office.Interop.Outlook.Application" />.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-104">For information about the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook.Application" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ActiveExplorer">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Explorer ActiveExplorer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Outlook.Explorer ActiveExplorer() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Application.ActiveExplorer" />
      <MemberSignature Language="VB.NET" Value="Public Function ActiveExplorer () As Explorer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Outlook::Explorer ^ ActiveExplorer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(273)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Explorer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6ae0-105">Renvoie le tout premier <see cref="T:Microsoft.Office.Interop.Outlook.Explorer" /> objet sur le bureau.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-105">Returns the topmost <see cref="T:Microsoft.Office.Interop.Outlook.Explorer" />  object on the desktop.</span></span></summary>
        <returns><span data-ttu-id="d6ae0-106">Objet <b>Explorer</b> qui représente l’Explorateur de niveau supérieur sur le bureau.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-106">An <b>Explorer</b> that represents the topmost explorer on the desktop.</span></span> <span data-ttu-id="d6ae0-107">Renvoie la <b>valeur Nothing</b> si aucun explorateur n’est actif.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-107">Returns <b>Nothing</b> if no explorer is active.</span></span></returns>
        <remarks><para> <span data-ttu-id="d6ae0-p103">Utilisez cette méthode pour renvoyer l'objet <b>Explorer</b> que l'utilisateur est très probablement en train d'utiliser. Cette méthode est également utile pour déterminer qu'aucun explorateur n'est actif, ce qui permet d'en ouvrir un.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-p103">Use this method to return the <b>Explorer</b> object that the user is most likely viewing. This method is also useful for determining when there is no active explorer, so a new one can be opened.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveInspector">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Inspector ActiveInspector ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Outlook.Inspector ActiveInspector() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Application.ActiveInspector" />
      <MemberSignature Language="VB.NET" Value="Public Function ActiveInspector () As Inspector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Outlook::Inspector ^ ActiveInspector();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(274)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Inspector</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6ae0-110">Renvoie le tout premier <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" /> objet sur le bureau.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-110">Returns the topmost <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" />  object on the desktop.</span></span></summary>
        <returns><span data-ttu-id="d6ae0-111">Un <b>Inspecteur</b> qui représente le tout premier inspecteur du bureau.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-111">An <b>Inspector</b> that represents the topmost inspector on the desktop.</span></span></returns>
        <remarks><para> <span data-ttu-id="d6ae0-112">Utilisez cette méthode pour accéder à l’objet <b>Inspector</b> qui est le plus vraisemblablement affiché par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-112">Use this method to access the <b>Inspector</b> object that the user is most likely to be viewing.</span></span></para>
          <para><span data-ttu-id="d6ae0-113">Si aucun inspecteur n’est actif, renvoie <b>Nothing</b>.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-113">If no inspector is active, returns <b>Nothing</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveWindow">
      <MemberSignature Language="C#" Value="public object ActiveWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ActiveWindow() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Application.ActiveWindow" />
      <MemberSignature Language="VB.NET" Value="Public Function ActiveWindow () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ActiveWindow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(287)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6ae0-114">Renvoie un objet représentant la fenêtre Microsoft Outlook de niveau supérieur sur le bureau, soit une <see cref="T:Microsoft.Office.Interop.Outlook.Explorer" /> ou <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" /> objet.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-114">Returns an object representing the topmost Microsoft Outlook window on the desktop, either an <see cref="T:Microsoft.Office.Interop.Outlook.Explorer" />  or an <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" />  object.</span></span></summary>
        <returns><span data-ttu-id="d6ae0-115">Objet qui représente la fenêtre Microsoft Outlook de niveau supérieur sur le bureau.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-115">An Object that represents the topmost Microsoft Outlook window on the desktop.</span></span> <span data-ttu-id="d6ae0-116">Renvoie <b>Aucun</b> si aucun explorateur ou inspecteur Outlook n’est ouvert.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-116">Returns <b>Nothing</b> if no Outlook explorer or inspector is open.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvancedSearch">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Search AdvancedSearch (string Scope, object Filter, object SearchSubFolders, object Tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Outlook.Search AdvancedSearch([in]string Scope, [in]object Filter, [in]object SearchSubFolders, [in]object Tag) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Application.AdvancedSearch(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AdvancedSearch (Scope As String, Optional Filter As Object, Optional SearchSubFolders As Object, Optional Tag As Object) As Search" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64101)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Search</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Scope" Type="System.String" />
        <Parameter Name="Filter" Type="System.Object" />
        <Parameter Name="SearchSubFolders" Type="System.Object" />
        <Parameter Name="Tag" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Scope"><span data-ttu-id="d6ae0-p105">Portée de la recherche. Par exemple, le chemin d'accès à un dossier. Il est recommandé d'écrire le chemin entre des guillemets simples. Sinon, la recherche risque de ne pas renvoyer de résultats corrects si le chemin contient des caractères spéciaux, y compris des caractères Unicode. Pour spécifier plusieurs chemins, encadrez chacun d'eux par des guillemets simples et séparez-les par une virgule.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-p105">The scope of the search. For example, the folder path of a folder. It is recommended that the folder path  is enclosed within single quotes. Otherwise, the search might not return correct results if the folder path contains special characters including Unicode characters. To specify multiple folder paths, enclose each folder path in single quotes and separate the single quoted folder paths with a comma.</span></span></param>
        <param name="Filter"><span data-ttu-id="d6ae0-122">Filtre de recherche DASL qui définit les paramètres de la recherche.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-122">The DASL search filter that defines the parameters of the search.</span></span></param>
        <param name="SearchSubFolders"><span data-ttu-id="d6ae0-123">Détermine si la recherche inclut certains ou tous les sous-dossiers du dossier.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-123">Determines if the search will include any of the folder's subfolders.</span></span></param>
        <param name="Tag"><span data-ttu-id="d6ae0-124">Nom donné en tant qu’identificateur pour la recherche.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-124">The name given as an identifier for the search.</span></span></param>
        <summary><span data-ttu-id="d6ae0-125">Effectue une recherche basée sur une chaîne de recherche DASL (DAV Searching and Locating) spécifiée.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-125">Performs a search based on a specified DAV Searching and Locating (DASL) search string.</span></span></summary>
        <returns><span data-ttu-id="d6ae0-126">A <see cref="T:Microsoft.Office.Interop.Outlook.Search" /> objet qui représente les résultats de la recherche.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-126">A <see cref="T:Microsoft.Office.Interop.Outlook.Search" /> object that represents the results of the search.</span></span></returns>
        <remarks><para><span data-ttu-id="d6ae0-127">Vous pouvez effectuer simultanément plusieurs recherches en appelant la méthode <b>AdvancedSearch</b> sur plusieurs lignes de code.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-127">You can run multiple searches simultaneously by calling the <b>AdvancedSearch</b> method in successive lines of code.</span></span> <span data-ttu-id="d6ae0-128">Toutefois, sachez que lorsque vous créez par programme un grand nombre de dossiers de recherche, l’activité générée par les recherches simultanées peut avoir des répercussions négatives sur les performances d’Outlook, surtout si Outlook effectue les recherches en mode Exchange en ligne.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-128">However, you should be aware that programmatically creating a large number of search folders can result in significant simultaneous search activity that would affect the performance of Outlook, especially if Outlook conducts the search in online Exchange mode.</span></span></para>
          <para><span data-ttu-id="d6ae0-129">La méthode <b>AdvancedSearch</b> et les fonctions associées dans le modèle objet Outlook ne créent pas un dossier de recherche qui apparaîtra dans l’interface utilisateur Outlook.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-129">The <b>AdvancedSearch</b> method and related features in the Outlook object model do not create a Search Folder that will appear in the Outlook user interface.</span></span> <span data-ttu-id="d6ae0-130">Toutefois, vous pouvez utiliser la <see cref="M:Microsoft.Office.Interop.Outlook.Search.Save(System.String)" /> méthode de l’objet Search qui est renvoyé pour créer un dossier de recherche qui apparaîtra dans la liste des dossiers de recherche dans l’interface utilisateur Outlook.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-130">However, you can use the <see cref="M:Microsoft.Office.Interop.Outlook.Search.Save(System.String)" /> method of the Search object that is returned to create a Search Folder that will appear in the Search Folders list in the Outlook user interface.</span></span></para>
          <para><span data-ttu-id="d6ae0-131">À l’aide de la <paramref name="Scope" /> paramètre, vous pouvez spécifier un ou plusieurs dossiers dans le même magasin, mais vous ne pouvez pas spécifier plusieurs dossiers dans plusieurs magasins.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-131">Using the <paramref name="Scope" /> parameter, you can specify one or more folders in the same store, but you may not specify multiple folders in multiple stores.</span></span> <span data-ttu-id="d6ae0-132">Pour spécifier plusieurs dossiers pour la <paramref name="Scope" /> paramètre, utilisez une virgule entre chaque chemin d’accès du dossier et mettez-le entre guillemets simples chaque chemin d’accès du dossier.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-132">To specify multiple folders for the <paramref name="Scope" /> parameter, use a comma character between each folder path and enclose each folder path in single quotes.</span></span> <span data-ttu-id="d6ae0-133">Pour les dossiers par défaut tels que Boîte de réception ou Éléments envoyés, vous pouvez utiliser simplement le nom du dossier au lieu de saisir l’intégralité du chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-133">For default folders such as Inbox or Sent Items, you can use the simple folder name instead of the full folder path.</span></span> <span data-ttu-id="d6ae0-134">Par exemple, les lignes de code suivantes représentent valide <paramref name="Scope" /> paramètres :</span><span class="sxs-lookup"><span data-stu-id="d6ae0-134">For example, the following lines of code represent valid <paramref name="Scope" /> parameters:</span></span></para>
          <code>Dim Scope As String = "'Inbox', 'Sent Items'"</code>
          <code>string Scope = "'Inbox', 'Sent Items'";</code>
          <code>Dim Scope1 As String = "'" &amp;amp; Application.Session.GetDefaultFolder( _
    Outlook.OlDefaultFolders.olFolderInbox).FolderPath &amp;amp; _
    "','" &amp;amp; Application.Session.GetDefaultFolder( _
    Outlook.OlDefaultFolders.olFolderSentMail).FolderPath</code>
          <code>string Scope1 = "'" + Application.Session.GetDefaultFolder( 
    Outlook.OlDefaultFolders.olFolderInbox).FolderPath + 
    "','" + Application.Session.GetDefaultFolder( 
    Outlook.OlDefaultFolders.olFolderSentMail).FolderPath;</code>
          <para><span data-ttu-id="d6ae0-135">Le <paramref name="Filter" /> paramètre peut être une requête DASL valide.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-135">The <paramref name="Filter" /> parameter can be any valid DASL query.</span></span> <span data-ttu-id="d6ae0-136">Pour plus d’informations sur les requêtes DASL, reportez-vous aux rubriques relatives au filtrage des éléments et au référencement des propriétés par espace de noms.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-136">For additional information on DASL queries, see Filtering Items and Referencing Properties by Namespace.</span></span> <span data-ttu-id="d6ae0-137">Notez que vous ne pouvez pas utiliser une requête JET pour les <paramref name="Filter" /> paramètre de recherche avancée.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-137">Note that you cannot use a JET query for the <paramref name="Filter" /> parameter of Advanced Search.</span></span> <span data-ttu-id="d6ae0-138">Si la recherche instantanée est activée sur un magasin qui contient un dossier spécifié dans le <paramref name="Scope" /> paramètre, vous pouvez utiliser des mots clés de recherche instantanée pour améliorer les performances de votre recherche.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-138">If Instant Search is enabled on a store that contains a folder specified in the <paramref name="Scope" /> parameter, you can use Instant Search keywords to improve the performance of your search.</span></span> <span data-ttu-id="d6ae0-139">Si vous utilisez des mots clés de recherche instantanée et que la recherche instantanée n’est pas activée, Outlook renvoie une erreur et votre recherche échoue.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-139">If you use Instant Search keywords and Instant Search is not enabled, Outlook will return an error and your search will fail.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AnswerWizard">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.AnswerWizard AnswerWizard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.AnswerWizard AnswerWizard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.AnswerWizard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AnswerWizard As AnswerWizard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::AnswerWizard ^ AnswerWizard { Microsoft::Office::Core::AnswerWizard ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(285)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(285)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.AnswerWizard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6ae0-140">Cet objet, ce membre ou cette énumération est déconseillé et n'est pas destiné à être utilisé dans votre code.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-140">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Application ^ Application { Microsoft::Office::Interop::Outlook::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6ae0-141">Renvoie un <see cref="T:Microsoft.Office.Interop.Outlook.Application" /> object qui représente l’application Outlook de l’objet parent.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-141">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Application" />  object that represents the parent Outlook application for the  object.</span></span> <span data-ttu-id="d6ae0-142">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-142">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assistance">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.IAssistance Assistance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.IAssistance Assistance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.Assistance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assistance As IAssistance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::IAssistance ^ Assistance { Microsoft::Office::Core::IAssistance ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64520)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64520)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.IAssistance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6ae0-143">Renvoie un <a href="http://go.microsoft.com/fwlink/?LinkId=87944">IAssistance</a></span><span class="sxs-lookup"><span data-stu-id="d6ae0-143">Returns an <a href="http://go.microsoft.com/fwlink/?LinkId=87944">IAssistance</a></span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="d6ae0-144">Pour plus d’informations sur <b>IAssistance</b>, voir la référence de bibliothèque d’objets pour Microsoft Office system 2007.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-144">For more information on <b>IAssistance</b>, see the Object Library Reference for the 2007 Microsoft Office system.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Assistant">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Assistant Assistant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Assistant Assistant" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.Assistant" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assistant As Assistant" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Assistant ^ Assistant { Microsoft::Office::Core::Assistant ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Assistant</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6ae0-145">Cet objet, ce membre ou cette énumération est déconseillé et n'est pas destiné à être utilisé dans votre code.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-145">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlObjectClass Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlObjectClass Class" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As OlObjectClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlObjectClass Class { Microsoft::Office::Interop::Outlook::OlObjectClass get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlObjectClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6ae0-146">Renvoie un <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constante indiquant la classe de l’objet.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-146">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constant indicating the object's class.</span></span> <span data-ttu-id="d6ae0-147">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-147">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="COMAddIns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.COMAddIns COMAddIns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.COMAddIns COMAddIns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.COMAddIns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property COMAddIns As COMAddIns" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::COMAddIns ^ COMAddIns { Microsoft::Office::Core::COMAddIns ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(280)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(280)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.COMAddIns</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6ae0-148">Renvoie une collection <b>COMAddIns</b> qui représente tous les compléments composant COM (Object Model) actuellement chargés dans Microsoft Outlook.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-148">Returns a <b>COMAddIns</b> collection that represents all the Component Object Model (COM) add-ins currently loaded in Microsoft Outlook.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFile">
      <MemberSignature Language="C#" Value="public object CopyFile (string FilePath, string DestFolderPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CopyFile([in]string FilePath, [in]string DestFolderPath) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Application.CopyFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyFile (FilePath As String, DestFolderPath As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CopyFile(System::String ^ FilePath, System::String ^ DestFolderPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64098)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FilePath" Type="System.String" />
        <Parameter Name="DestFolderPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="FilePath"><span data-ttu-id="d6ae0-149">Nom du chemin d'accès de l'objet à copier.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-149">The path name of the object you want to copy.</span></span></param>
        <param name="DestFolderPath"><span data-ttu-id="d6ae0-150">Emplacement où vous souhaitez copier le fichier.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-150">The location you want to copy the file to.</span></span></param>
        <summary><span data-ttu-id="d6ae0-151">Copie un fichier à partir d’un emplacement spécifié dans Microsoft Outlook stocker.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-151">Copies a file from a specified location into a Microsoft Outlook store.</span></span></summary>
        <returns><span data-ttu-id="d6ae0-152">Valeur <b>Object</b> qui représente le fichier copié.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-152">An <b>Object</b> value that represents the copied file.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="public object CreateItem (Microsoft.Office.Interop.Outlook.OlItemType ItemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateItem([in]valuetype Microsoft.Office.Interop.Outlook.OlItemType ItemType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Application.CreateItem(Microsoft.Office.Interop.Outlook.OlItemType)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateItem (ItemType As OlItemType) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateItem(Microsoft::Office::Interop::Outlook::OlItemType ItemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(266)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ItemType" Type="Microsoft.Office.Interop.Outlook.OlItemType" />
      </Parameters>
      <Docs>
        <param name="ItemType"><span data-ttu-id="d6ae0-153">Le type d’élément Outlook pour le nouvel élément.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-153">The Outlook item type for the new item.</span></span></param>
        <summary><span data-ttu-id="d6ae0-154">Crée et renvoie un nouvel élément Microsoft Outlook.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-154">Creates and returns a new Microsoft Outlook item.</span></span></summary>
        <returns><span data-ttu-id="d6ae0-155">Valeur <b>Object</b> qui représente le nouvel élément Outlook.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-155">An <b>Object</b> value that represents the new Outlook item.</span></span></returns>
        <remarks><para><span data-ttu-id="d6ae0-156">La méthode <b>CreateItem</b> ne peut créer que des éléments Outlook par défaut.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-156">The <b>CreateItem</b> method can only create default Outlook items.</span></span> <span data-ttu-id="d6ae0-157">Pour créer de nouveaux éléments à l’aide d’un formulaire personnalisé, utilisez la <see cref="M:Microsoft.Office.Interop.Outlook._Items.Add(System.Object)" /> méthode sur le <see cref="T:Microsoft.Office.Interop.Outlook.Items" /> collection.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-157">To create new items using a custom form, use the <see cref="M:Microsoft.Office.Interop.Outlook._Items.Add(System.Object)" />  method on the <see cref="T:Microsoft.Office.Interop.Outlook.Items" />  collection.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItemFromTemplate">
      <MemberSignature Language="C#" Value="public object CreateItemFromTemplate (string TemplatePath, object InFolder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateItemFromTemplate([in]string TemplatePath, [in]object InFolder) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Application.CreateItemFromTemplate(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateItemFromTemplate (TemplatePath As String, Optional InFolder As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(267)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TemplatePath" Type="System.String" />
        <Parameter Name="InFolder" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="TemplatePath"><span data-ttu-id="d6ae0-158">Chemin d'accès et nom de fichier du modèle Outlook utilisé pour le nouvel élément.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-158">The path and file name of the Outlook template for the new item.</span></span></param>
        <param name="InFolder"><span data-ttu-id="d6ae0-p113">Dossier dans lequel l'élément doit être créé. Si cet argument est omis, c'est le dossier par défaut du type d'élément qui est utilisé.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-p113">The folder in which the item is to be created. If this argument is omitted, the default folder for the item type will be used.</span></span></param>
        <summary><span data-ttu-id="d6ae0-161">Crée un nouvel élément Microsoft Outlook à partir d'un modèle Outlook (.oft) et le renvoie.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-161">Creates a new Microsoft Outlook item from an Outlook template (.oft) and returns the new item.</span></span></summary>
        <returns><span data-ttu-id="d6ae0-162">Valeur <b>Object</b> qui représente le nouvel élément Microsoft Outlook.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-162">An <b>Object</b> value that represents the new Microsoft Outlook item.</span></span></returns>
        <remarks><para><span data-ttu-id="d6ae0-163">Les nouveaux éléments s'ouvrent toujours en mode composition, pat opposition au mode lecture, quel que soit le mode dans lequel les éléments ont été enregistrés sur le disque.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-163">New items will always open in compose mode, as opposed to read mode, regardless of the mode in which the items were saved to disk.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public object CreateObject (string ObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateObject([in]string ObjectName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Application.CreateObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateObject (ObjectName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateObject(System::String ^ ObjectName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(277)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ObjectName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ObjectName"><span data-ttu-id="d6ae0-164">Nom de la classe de l’objet à créer.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-164">The class name of the object to create.</span></span> <span data-ttu-id="d6ae0-165">Pour plus d’informations sur les noms de classe valides, voir <a href="http://go.microsoft.com/fwlink/?LinkId=87946">Identificateurs de programmation OLE</a></span><span class="sxs-lookup"><span data-stu-id="d6ae0-165">For information about valid class names, see <a href="http://go.microsoft.com/fwlink/?LinkId=87946">OLE Programmatic Identifiers</a></span></span></param>
        <summary><span data-ttu-id="d6ae0-166">Crée un objet Automation de la classe spécifiée.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-166">Creates an Automation object of the specified class.</span></span></summary>
        <returns><span data-ttu-id="d6ae0-167">Valeur <b>Object</b> qui représente la nouvelle instance d’objet Automation.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-167">An <b>Object</b> value that represents the new Automation object instance.</span></span> <span data-ttu-id="d6ae0-168">Si l’application est déjà en cours d’exécution, <b>CreateObject</b> crée une nouvelle instance.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-168">If the application is already running, <b>CreateObject</b> will create a new instance.</span></span></returns>
        <remarks><para><span data-ttu-id="d6ae0-p116">Cette méthode permet d'automatiser d'autres applications à l'aide de Microsoft Visual Basic Scripting Edition (VBScript) 1.0, qui n'incluait pas de méthode  <b>CreateObject</b>. La méthode <b>CreateObject</b> a été incluse dans VBScript version 2.0 et ultérieure. Cette méthode ne doit pas être utilisée pour automatiser Microsoft Outlook depuis VBScript.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-p116">This method is provided so that other applications can be automated from Microsoft Visual Basic Scripting Edition (VBScript) 1.0, which did not include a  <b>CreateObject</b> method. <b>CreateObject</b> has been included in VBScript version 2.0 and later. This method should not be used to automate Microsoft Outlook from VBScript.</span></span></para>
          <para><span data-ttu-id="d6ae0-172">
            <b>Remarque</b>: les méthodes <b>CreateObject</b> couramment utilisées dans l’exemple de code dans ce fichier d’aide (disponible lorsque vous cliquez sur « Exemple ») sont accessibles via Microsoft Visual Basic ou Microsoft Visual Basic pour Applications (VBA).</span><span class="sxs-lookup"><span data-stu-id="d6ae0-172">
            <b>Note</b>: The <b>CreateObject</b> methods commonly used in the example code within this Help file (available when you click "Example") are made available by Microsoft Visual Basic or Microsoft Visual Basic for Applications (VBA).</span></span> <span data-ttu-id="d6ae0-173">Ces exemples ne <paramref name="not" /> utiliser la méthode <b>CreateObject</b> qui est implémentée dans le cadre du modèle d’objet dans Outlook.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-173">These examples do <paramref name="not" /> use the same <b>CreateObject</b> method that is implemented as part of the object model in Outlook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultProfileName">
      <MemberSignature Language="C#" Value="public string DefaultProfileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultProfileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.DefaultProfileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultProfileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultProfileName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64214)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64214)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6ae0-174">Renvoie une <b>chaîne</b> (<b>string</b> en c#) représentant le nom du profil par défaut.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-174">Returns a <b>String</b> (<b>string</b> in C#) representing the name of the default profile name.</span></span> <span data-ttu-id="d6ae0-175">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-175">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="d6ae0-176">Renvoie une chaîne vide si aucun profil n'a été configuré ou si Outlook n'a aucun profil par défaut.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-176">Returns an empty string if no profile has been configured or if there is no default profile for Outlook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Explorers">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Explorers Explorers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Explorers Explorers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.Explorers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Explorers As Explorers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Explorers ^ Explorers { Microsoft::Office::Interop::Outlook::Explorers ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Explorers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6ae0-177">Renvoie un <see cref="T:Microsoft.Office.Interop.Outlook.Explorers" /> objet de collection qui contienne le <see cref="T:Microsoft.Office.Interop.Outlook.Explorer" /> objets représentant tous les explorateurs.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-177">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Explorers" />  collection object that contains the <see cref="T:Microsoft.Office.Interop.Outlook.Explorer" />  objects representing all open explorers.</span></span> <span data-ttu-id="d6ae0-178">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-178">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureInstall">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoFeatureInstall FeatureInstall { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoFeatureInstall FeatureInstall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.FeatureInstall" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureInstall As MsoFeatureInstall" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoFeatureInstall FeatureInstall { Microsoft::Office::Core::MsoFeatureInstall get(); void set(Microsoft::Office::Core::MsoFeatureInstall value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(286)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(286)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(286)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoFeatureInstall</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6ae0-179">Cet objet, ce membre ou cette énumération est déconseillé et n'est pas destiné à être utilisé dans votre code.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-179">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamespace">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.NameSpace GetNamespace (string Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Outlook.NameSpace GetNamespace([in]string Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNamespace (Type As String) As NameSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Outlook::NameSpace ^ GetNamespace(System::String ^ Type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(272)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.NameSpace</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="d6ae0-180">Type d'espace de noms à renvoyer.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-180">The type of name space to return.</span></span></param>
        <summary><span data-ttu-id="d6ae0-181">Renvoie un <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" /> objet du type spécifié.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-181">Returns a <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />  object of the specified type.</span></span></summary>
        <returns><span data-ttu-id="d6ae0-182">Objet <b>espace de noms</b>  qui représente l'espace de noms spécifié.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-182">A <b>NameSpace</b> object that represents the specified namespace.</span></span></returns>
        <remarks><para><span data-ttu-id="d6ae0-183">Le seul espace de noms pris en charge le type est « MAPI ».</span><span class="sxs-lookup"><span data-stu-id="d6ae0-183">The only supported name space type is "MAPI".</span></span> <span data-ttu-id="d6ae0-184">La méthode <b>GetNameSpace</b> est fonctionnellement équivalente à la propriété <b>Session</b> , ce qui a été introduite dans Microsoft Outlook 98.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-184">The <b>GetNameSpace</b> method is functionally equivalent to the <b>Session</b> property, which was introduced in Microsoft Outlook 98.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNewNickNames">
      <MemberSignature Language="C#" Value="public void GetNewNickNames (ref object pvar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetNewNickNames([in]object&amp; pvar) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Application.GetNewNickNames(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetNewNickNames (ByRef pvar As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetNewNickNames(System::Object ^ % pvar);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64072)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pvar" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="pvar">To be added.</param>
        <summary><span data-ttu-id="d6ae0-185">Cet objet, ce membre ou cette énumération est déconseillé et n'est pas destiné à être utilisé dans votre code.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-185">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectReference">
      <MemberSignature Language="C#" Value="public object GetObjectReference (object Item, Microsoft.Office.Interop.Outlook.OlReferenceType ReferenceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObjectReference([in]object Item, [in]valuetype Microsoft.Office.Interop.Outlook.OlReferenceType ReferenceType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Application.GetObjectReference(System.Object,Microsoft.Office.Interop.Outlook.OlReferenceType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectReference (Item As Object, ReferenceType As OlReferenceType) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetObjectReference(System::Object ^ Item, Microsoft::Office::Interop::Outlook::OlReferenceType ReferenceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64470)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Item" Type="System.Object" />
        <Parameter Name="ReferenceType" Type="Microsoft.Office.Interop.Outlook.OlReferenceType" />
      </Parameters>
      <Docs>
        <param name="Item"><span data-ttu-id="d6ae0-186">Objet à partir duquel obtenir une référence d'objet forte ou faible.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-186">The object from which to obtain a strong or weak object reference.</span></span></param>
        <param name="ReferenceType"><span data-ttu-id="d6ae0-187">Type de référence d'objet.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-187">The type of object reference.</span></span></param>
        <summary><span data-ttu-id="d6ae0-188">Crée une référence d'objet forte ou faible pour un objet Outlook spécifique.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-188">Creates a strong or weak object reference for a specified Outlook object.</span></span></summary>
        <returns><span data-ttu-id="d6ae0-189">Un <b>objet</b> qui représente un nom fort ou la référence d’objet faible de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-189">An <b>Object</b> that represents a strong or weak object reference for the specified object.</span></span></returns>
        <remarks><para><span data-ttu-id="d6ae0-190">Cette méthode renvoie une référence d’objet faible ou forte pour l’objet spécifié dans <paramref name="Item" />.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-190">This method returns a weak or strong object reference for the object specified in <paramref name="Item" />.</span></span></para>
          <para><span data-ttu-id="d6ae0-191">
            <b>Remarque</b>: Outlook peut échouer fermer correctement si un complément conserve des références d’objet fortes.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-191">
            <b>Note</b>: Outlook can fail to close successfully if an add-in retains strong object references.</span></span> <span data-ttu-id="d6ae0-192">Toujours supprimer la référence une référence d’objet forte une fois qu’il n’est plus nécessaire par le complément.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-192">Always dereference a strong object reference once it is no longer needed by the add-in.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Inspectors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Inspectors Inspectors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Inspectors Inspectors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.Inspectors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Inspectors As Inspectors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Inspectors ^ Inspectors { Microsoft::Office::Interop::Outlook::Inspectors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(282)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(282)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Inspectors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6ae0-193">Renvoie un <see cref="T:Microsoft.Office.Interop.Outlook.Inspectors" /> objet de collection qui contienne le <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" /> objets représentant tous les inspecteurs.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-193">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Inspectors" />  collection object that contains the <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" />  objects representing all open inspectors.</span></span> <span data-ttu-id="d6ae0-194">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-194">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSearchSynchronous">
      <MemberSignature Language="C#" Value="public bool IsSearchSynchronous (string LookInFolders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSearchSynchronous([in]string LookInFolders) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Application.IsSearchSynchronous(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSearchSynchronous (LookInFolders As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSearchSynchronous(System::String ^ LookInFolders);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="LookInFolders" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="LookInFolders"><span data-ttu-id="d6ae0-p123">Nom du chemin d’accès aux dossiers concernés par la recherche. Vous devez mettre le chemin d’accès au dossier entre guillemets simples.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-p123">The path name of the folders that the search will search through. You must enclose the folder path  with single quotes.</span></span></param>
        <summary><span data-ttu-id="d6ae0-197">Renvoie un <b>type Boolean</b> (<b>bool</b> en c#) indiquant si une recherche est synchrone ou asynchrone.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-197">Returns a <b>Boolean</b> (<b>bool</b> in C#) indicating if a search will be synchronous or asynchronous.</span></span></summary>
        <returns><span data-ttu-id="d6ae0-198">Renvoie <b>True</b> si la recherche est synchrone ; sinon, renvoie <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-198"><b>True</b> if the search is synchronous; otherwise, <b>False</b>.</span></span></returns>
        <remarks><para><span data-ttu-id="d6ae0-199">Si la recherche est synchrone, la <see cref="M:Microsoft.Office.Interop.Outlook._Application.AdvancedSearch(System.String,System.Object,System.Object,System.Object)" /> méthode ne retourne pas jusqu'à ce que la recherche est terminée.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-199">If the search is synchronous, the <see cref="M:Microsoft.Office.Interop.Outlook._Application.AdvancedSearch(System.String,System.Object,System.Object,System.Object)" /> method will not return until the search has completed.</span></span> <span data-ttu-id="d6ae0-200">Inversement, si la recherche est asynchrone, la méthode <b>AdvancedSearch</b> renverra immédiatement.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-200">Conversely, if the search is asynchronous, the <b>AdvancedSearch</b> method will immediately return.</span></span> <span data-ttu-id="d6ae0-201">Pour obtenir des résultats pertinents à partir d’une recherche asynchrone, utilisez la <see cref="E:Microsoft.Office.Interop.Outlook.ApplicationEvents_11_Event.AdvancedSearchComplete" /> événement pour vous avertir lors de la recherche est terminée.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-201">In order to get meaningful results from an asynchronous search, use the <see cref="E:Microsoft.Office.Interop.Outlook.ApplicationEvents_11_Event.AdvancedSearchComplete" /> event to notify you when the search has finished.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTrusted">
      <MemberSignature Language="C#" Value="public bool IsTrusted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrusted" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.IsTrusted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTrusted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTrusted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64499)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64499)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6ae0-202">Renvoie un <b>type Boolean</b> (<b>bool</b> en c#) pour indiquer si un complément ou appelant externe est considéré comme étant approuvé par Outlook.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-202">Returns a <b>Boolean</b> (<b>bool</b> in C#) to indicate if an add-in or external caller is considered trusted by Outlook.</span></span> <span data-ttu-id="d6ae0-203">Lecture seule</span><span class="sxs-lookup"><span data-stu-id="d6ae0-203">Read-only</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="d6ae0-204">Pour les appelants out-of-process qui ont instancié la <see cref="T:Microsoft.Office.Interop.Outlook.Application" /> objet, <b>IsTrusted</b> renvoie toujours <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-204">For out-of-process callers that have instantiated the <see cref="T:Microsoft.Office.Interop.Outlook.Application" /> object, <b>IsTrusted</b> always returns <b>False</b>.</span></span>   <span data-ttu-id="d6ae0-205">Pour les compléments Outlook, <b>IsTrusted</b> renvoie <b>la valeur True</b> si et seulement si le complément est considéré comme étant approuvé par Outlook.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-205">For Outlook add-ins, <b>IsTrusted</b> returns <b>True</b> if and only if the add-in is considered trusted by Outlook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageSettings">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.LanguageSettings LanguageSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.LanguageSettings LanguageSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.LanguageSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LanguageSettings As LanguageSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::LanguageSettings ^ LanguageSettings { Microsoft::Office::Core::LanguageSettings ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(283)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(283)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.LanguageSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6ae0-206">Renvoie un <a href="http://go.microsoft.com/fwlink/?LinkId=87945">LanguageSettings</a></span><span class="sxs-lookup"><span data-stu-id="d6ae0-206">Returns a <a href="http://go.microsoft.com/fwlink/?LinkId=87945">LanguageSettings</a></span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12289)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(12289)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6ae0-207">Renvoie une valeur de <b>chaîne</b> (<b>string</b> en c#) qui représente le nom complet de l’objet.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-207">Returns a <b>String</b> (<b>string</b> in C#) value that represents the display name for the object.</span></span> <span data-ttu-id="d6ae0-208">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-208">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6ae0-p128">Renvoie la valeur de type <b>Object</b> parent de l’objet spécifié. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-p128">Returns the parent <b>Object</b> of the specified object. Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PickerDialog">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.PickerDialog PickerDialog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.PickerDialog PickerDialog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.PickerDialog" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PickerDialog As PickerDialog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::PickerDialog ^ PickerDialog { Microsoft::Office::Core::PickerDialog ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64613)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64613)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.PickerDialog</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6ae0-211">Renvoie un <see cref="T:Microsoft.Office.Core.PickerDialog" /> objet qui fournit les fonctionnalités pour sélectionner des personnes ou des données dans une boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-211">Returns a <see cref="T:Microsoft.Office.Core.PickerDialog" /> object that provides the functionality to select people or data in a dialog box.</span></span> <span data-ttu-id="d6ae0-212">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-212">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="d6ae0-p130">L'objet <b>PickerDialog</b> est disponible dans la bibliothèque de type Microsoft Office. Pour plus d'informations, voir les objets suivants et leurs membres :</span><span class="sxs-lookup"><span data-stu-id="d6ae0-p130">The <b>PickerDialog</b> object is available in the Microsoft Office type library. For more information, see the following objects and their members:</span></span></para>
          <list type="bullet">
            <item>
              <para><span data-ttu-id="d6ae0-215">
                <b>PickerDialog</b>
              </span><span class="sxs-lookup"><span data-stu-id="d6ae0-215">
                <b>PickerDialog</b>
              </span></span></para>
            </item>
            <item>
              <para>
                <see cref="T:Microsoft.Office.Core.PickerField" />
              </para>
            </item>
            <item>
              <para>
                <see cref="T:Microsoft.Office.Core.PickerFields" />
              </para>
            </item>
            <item>
              <para>
                <see cref="T:Microsoft.Office.Core.PickerProperties" />
              </para>
            </item>
            <item>
              <para>
                <see cref="T:Microsoft.Office.Core.PickerProperty" />
              </para>
            </item>
            <item>
              <para>
                <see cref="T:Microsoft.Office.Core.PickerResult" />
              </para>
            </item>
            <item>
              <para>
                <see cref="T:Microsoft.Office.Core.PickerResults" />
              </para>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ProductCode">
      <MemberSignature Language="C#" Value="public string ProductCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.ProductCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductCode As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductCode { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(284)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(284)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6ae0-216">Renvoie une <b>chaîne</b> (<b>string</b> en c#) spécifiant <a href="http://go.microsoft.com/fwlink/?LinkId=87946">l’identificateur global unique (GUID)</a> Microsoft Outlook</span><span class="sxs-lookup"><span data-stu-id="d6ae0-216">Returns a <b>String</b> (<b>string</b> in C#) specifying the Microsoft Outlook <a href="http://go.microsoft.com/fwlink/?LinkId=87946">globally unique identifier (GUID)</a></span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Quit">
      <MemberSignature Language="C#" Value="public void Quit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Quit() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Application.Quit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Quit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Quit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(275)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6ae0-217">Ferme toutes les fenêtres actuellement ouvertes.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-217">Closes all currently open windows.</span></span></summary>
        <remarks><para><span data-ttu-id="d6ae0-218">La session Outlook associée est totalement fermée : l'utilisateur est déconnecté du système de messagerie et les modifications apportées aux éléments qui n'ont pas été enregistrées sont perdues.

</span><span class="sxs-lookup"><span data-stu-id="d6ae0-218">The associated Outlook session is closed completely; the user is logged out of the messaging system and any changes to items not already saved are discarded.</span></span>  </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshFormRegionDefinition">
      <MemberSignature Language="C#" Value="public void RefreshFormRegionDefinition (string RegionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshFormRegionDefinition([in]string RegionName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Application.RefreshFormRegionDefinition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RefreshFormRegionDefinition (RegionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RefreshFormRegionDefinition(System::String ^ RegionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64639)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RegionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="RegionName"><span data-ttu-id="d6ae0-219">Le nom interne de la zone dont vous souhaitez actualiser dans le cache de la définition de formulaire.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-219">The internal name of the form region whose definition you want to refresh in the cache.</span></span> <span data-ttu-id="d6ae0-220">Pour actualiser toutes les définitions de zone de formulaire, spécifiez une chaîne vide.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-220">To refresh all form region definitions, specify an empty string.</span></span></param>
        <summary><span data-ttu-id="d6ae0-221">Actualise le cache en obtenant la définition actuelle à partir du Registre de Windows pour une ou toutes les zones de formulaire définies pour l’ordinateur local et l’utilisateur actif.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-221">Refreshes the cache by obtaining the current definition from the Windows registry for one or all of the form regions that are defined for the local machine and the current user.</span></span></summary>
        <remarks><para><span data-ttu-id="d6ae0-222">Lorsque Microsoft Outlook démarre, il lit le Registre Windows pour obtenir une liste de zones de formulaire et leurs définitions, puis met en cache les données.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-222">When Microsoft Outlook starts, it reads the Windows registry to obtain a list of form regions and their definitions, and then caches the data.</span></span> <span data-ttu-id="d6ae0-223">Les définitions sont stockées dans le Registre sous la clé d’ordinateur locale (sous HKEY_LOCAL_MACHINE\Software\Microsoft\Office\Outlook\FormRegions) et sous la clé utilisateur actif (sous HKEY_CURRENT_USER\Software\Microsoft\Office\Outlook\FormRegions).</span><span class="sxs-lookup"><span data-stu-id="d6ae0-223">The definitions are stored in the registry under the local machine key (as HKEY_LOCAL_MACHINE\Software\Microsoft\Office\Outlook\FormRegions) and under the current user key (as HKEY_CURRENT_USER\Software\Microsoft\Office\Outlook\FormRegions).</span></span> <span data-ttu-id="d6ae0-224">Les définitions de décrivent la mise en page, le comportement et autres caractéristiques de chaque zone de formulaire.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-224">The definitions describe the layout, behavior, and other characteristics of each form region.</span></span> <span data-ttu-id="d6ae0-225">Si vous enregistrez une zone de formulaire ou modifiez la définition d’une zone de formulaire après le démarrage d’Outlook, vous pouvez utiliser la <b>refreshformregiondefinition,</b> méthode pour indiquer à Outlook pour obtenir les informations mises à jour.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-225">If you register a form region or modify the definition of a form region after Outlook starts, you can use the <b>RefreshFormRegionDefinition</b> method to instruct Outlook to obtain the updated information.</span></span></para>
          <para><span data-ttu-id="d6ae0-226">Le <paramref name="RegionName" /> argument doit correspondre à la <see cref="P:Microsoft.Office.Interop.Outlook._FormRegion.InternalName" /> propriété de la zone de formulaire dont vous êtes l’actualisation de la définition.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-226">The <paramref name="RegionName" /> argument should match the <see cref="P:Microsoft.Office.Interop.Outlook._FormRegion.InternalName" /> property of the form region whose definition you are refreshing.</span></span> <span data-ttu-id="d6ae0-227">Le nom interne d’une zone de formulaire prend en charge uniquement des caractères ASCII.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-227">The internal name of a form region supports only ASCII characters.</span></span> <span data-ttu-id="d6ae0-228">Si vous spécifiez une chaîne vide, il lit le Registre Windows pour obtenir des définitions pour toutes les zones de formulaire qui sont définis pour l’ordinateur local et l’utilisateur actuel.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-228">If you specify an empty string, Outlook reads the Windows registry to obtain definitions for all of the form regions that are defined for the local machine and the current user.</span></span></para>
          <para><span data-ttu-id="d6ae0-229">Pour plus d’informations sur l’inscription des zones de formulaire, voir Spécification de zones de formulaire dans le Registre de Windows.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-229">For more information about registering form regions, see Specifying Form Regions in the Windows Registry.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Reminders">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Reminders Reminders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Reminders Reminders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.Reminders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Reminders As Reminders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Reminders ^ Reminders { Microsoft::Office::Interop::Outlook::Reminders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64153)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64153)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Reminders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6ae0-230">Renvoie un <see cref="T:Microsoft.Office.Interop.Outlook.Reminders" /> collection qui représente tous les rappels actifs.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-230">Returns a <see cref="T:Microsoft.Office.Interop.Outlook.Reminders" /> collection that represents all current reminders.</span></span> <span data-ttu-id="d6ae0-231">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-231">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.NameSpace Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.NameSpace Session" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As NameSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::NameSpace ^ Session { Microsoft::Office::Interop::Outlook::NameSpace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.NameSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6ae0-232">Renvoie le <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" /> objet pour la session active.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-232">Returns the <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />  object for the current session.</span></span> <span data-ttu-id="d6ae0-233">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-233">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="d6ae0-234">La propriété <b>Session</b> et la <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> méthode peut être utilisée de façon interchangeable pour obtenir l’objet <b>NameSpace</b> pour la session active.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-234">The <b>Session</b> property and the <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> method can be used interchangeably to obtain the <b>NameSpace</b> object for the current session.</span></span> <span data-ttu-id="d6ae0-235">Les deux membres ont la même fonction.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-235">Both members serve the same purpose.</span></span> <span data-ttu-id="d6ae0-236">Par exemple, les paires d’instructions suivantes effectuent la même fonction :</span><span class="sxs-lookup"><span data-stu-id="d6ae0-236">For example, the following pairs of statements perform the same function:</span></span></para>
          <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
          <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
          <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
          <code>Outlook.NameSpace objSession = Application.Session;</code>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeZones">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.TimeZones TimeZones { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.TimeZones TimeZones" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.TimeZones" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeZones As TimeZones" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::TimeZones ^ TimeZones { Microsoft::Office::Interop::Outlook::TimeZones ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64553)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64553)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.TimeZones</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6ae0-237">Renvoie un <see cref="T:Microsoft.Office.Interop.Outlook.TimeZones" /> collection qui représente le jeu de fuseaux horaires pris en charge par Outlook.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-237">Returns a <see cref="T:Microsoft.Office.Interop.Outlook.TimeZones" /> collection that represents the set of time zones supported by Outlook.</span></span> <span data-ttu-id="d6ae0-238">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-238">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="d6ae0-239">Le jeu de fuseaux horaires pris en charge par Outlook dépend des données stockées dans la clé de Registre Windows HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones.
</span><span class="sxs-lookup"><span data-stu-id="d6ae0-239">The set of time zones supported by Outlook is based on the data stored in  the Windows registry key HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Application.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(278)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(278)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6ae0-240">Cette propriété renvoie ou définit une <b>chaîne</b> (<b>string</b> en c#) indiquant le numéro de la version.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-240">Returns or sets a <b>String</b> (<b>string</b> in C#) indicating the number of the version.</span></span> <span data-ttu-id="d6ae0-241">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="d6ae0-241">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
