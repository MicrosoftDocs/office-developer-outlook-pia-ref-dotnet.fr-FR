<Type Name="FormRegionStartup" FullName="Microsoft.Office.Interop.Outlook.FormRegionStartup">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="75a9b2ad694849b28efb9d70e2610a95ab5912e0" />
    <Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20634427" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface FormRegionStartup : Microsoft.Office.Interop.Outlook._FormRegionStartup" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract FormRegionStartup implements class Microsoft.Office.Interop.Outlook._FormRegionStartup" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" />
  <TypeSignature Language="VB.NET" Value="Public Interface FormRegionStartup&#xA;Implements _FormRegionStartup" />
  <TypeSignature Language="C++ CLI" Value="public interface class FormRegionStartup : Microsoft::Office::Interop::Outlook::_FormRegionStartup" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Interop.Outlook._FormRegionStartup</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.CoClass(typeof(Microsoft.Office.Interop.Outlook.FormRegionStartupClass))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00063059-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="eedf1-101">Définit une interface qui permet à un complément de spécifier le stockage et l’interface utilisateur d’une zone de formulaire, obtient un objet pour cette zone de formulaire et détermine quand la zone est sur le point d’être affichée dans un formulaire ou dans le Volet de lecture.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eedf1-101">Defines an interface that allows an add-in to specify the storage and the user interface of a form region, obtains an object for that form region, and determines when the form region is about to be displayed in a form or in the Reading Pane.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="eedf1-102">
        <para>Il s’agit d’une interface .NET dérivée une coclasse COM qui est requis par le code managé pour l’interopérabilité avec l’objet COM correspondant. Utilisez cette interface dérivée pour accéder à tous les membres de méthode, propriétés et événements de l’objet COM. Toutefois, si une méthode ou l’événement que vous souhaitez utiliser partage le même nom sous le même objet COM, effectuer un cast à l’interface principale correspondant pour appeler la méthode et dans l’interface d’événements le plus récent pour se connecter à l’événement. Reportez-vous à cette rubrique pour plus d’informations sur l’objet COM. Pour plus d’informations sur les membres des méthodes et des propriétés de l’objet COM, voir <see cref="T:Microsoft.Office.Interop.Outlook._FormRegionStartup" />. </para>Interface 
      <para>le <b>FormRegionStartup</b> est une classe abstraite, ce qui signifie qu’elle ne peut pas être instanciée directement. Dans Visual Basic, vous pouvez utiliser le mot clé <b>Implements</b> à fournir les méthodes de <b>l’objet FormRegionStartup</b> dans votre classe comme suit :</para><code>Implements Outlook._FormRegionStartup.BeforeFormRegionShow</code><para>un complément de déploiement d’une zone de formulaire dans un formulaire Outlook sur un client ordinateur doit implémenter la <b> FormRegionStartup</b> interface qui se compose de deux méthodes, <see cref="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.BeforeFormRegionShow(Microsoft.Office.Interop.Outlook.FormRegion)" /> et <see cref="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionStorage(System.String,System.Object,System.Int32,Microsoft.Office.Interop.Outlook.OlFormRegionMode,Microsoft.Office.Interop.Outlook.OlFormRegionSize)" />. Lorsqu’Outlook charge le complément, Outlook interroge l’interface <b>IDTExtensibility2</b> pour <b>FormRegionStartup</b>. </para><para>Le complément indique le fichier de stockage et de mise en page pour la zone de formulaire dans <b>GetFormRegionStorage</b>. En invoquant <b>GetFormRegionStorage</b>, Outlook alloue le stockage et calcule la mise en forme pour la zone de formulaire, instancie un objet pour la zone de formulaire et renvoie une valeur représentant le stockage alloué à la macro complémentaire. Si <b>GetFormRegionStorage</b> réussit, juste avant que la zone de formulaire est affichée dans une fenêtre d’inspecteur ou dans le volet de lecture, Outlook appelle <b>BeforeFormRegionShow</b> et transmettre le <see cref="T:Microsoft.Office.Interop.Outlook.FormRegion" /> objet de la zone de formulaire pour le complément. Le complément utilise cette opportunité avant l’affichage de la zone de formulaire pour mettre à jour tous les contrôles dans la zone de formulaire. </para><para>Lorsque le complément ferme le cadre de la zone de formulaire, les ajouter doit en relâcher l’objet pour la zone de formulaire.</para><para>Pour plus d’informations sur l’écriture de compléments pour les zones de formulaire, voir <a href="http://go.microsoft.com/fwlink/?LinkId=87930">extension d’une zone de formulaire avec un complément</a><b>FormRegionStartup</b>, consultez les téléchargements d’exemples de code sur MSDN.</para><para /></span>
      <span class="sxs-lookup">
        <span data-stu-id="eedf1-102">
          <para>This is a .NET interface derived from a COM coclass that is required by managed code for interoperability with the corresponding COM object. Use this derived interface to access all method, property, and event members of the COM object. However, if a method or event you want to use shares the same name under the same COM object, cast to the corresponding primary interface to call the method, and cast to the latest events interface to connect to the event. Refer to this topic for information about the COM object. For information about the method and property members of the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook._FormRegionStartup" />. </para>
          <para>The <b>FormRegionStartup</b> interface is an abstract class, which means that it cannot be instantiated directly. In Visual Basic, you can use the <b>Implements</b> keyword to provide the methods of  <b>FormRegionStartup</b> in your add-in class as follows:</para>
          <code>Implements Outlook._FormRegionStartup.BeforeFormRegionShow</code>
          <para>An add-in deploying a form region in an Outlook form on a client computer must implement the <b>FormRegionStartup</b> interface which consists of the two methods,   <see cref="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.BeforeFormRegionShow(Microsoft.Office.Interop.Outlook.FormRegion)" /> and <see cref="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionStorage(System.String,System.Object,System.Int32,Microsoft.Office.Interop.Outlook.OlFormRegionMode,Microsoft.Office.Interop.Outlook.OlFormRegionSize)" />. When Outlook loads the add-in, Outlook queries the <b>IDTExtensibility2</b> interface for <b>FormRegionStartup</b>. </para>
          <para>The add-in indicates the storage and layout file for the form region  in <b>GetFormRegionStorage</b>. By calling <b>GetFormRegionStorage</b>, Outlook allocates storage and calculates the layout for the form region, instantiates an object for the form region, and returns a value representing the storage allocated to the add-in. If <b>GetFormRegionStorage</b> is successful, just before the form region is displayed in an Inspector window or in the Reading Pane, Outlook will call <b>BeforeFormRegionShow</b> and pass the <see cref="T:Microsoft.Office.Interop.Outlook.FormRegion" /> object of the form region to the add-in. The add-in uses this opportunity before the form region is displayed to update any controls  in the form region. </para>
          <para>When the add-in closes the frame for the form region, the add-in must release the object for the form region.</para>
          <para>For more information on writing add-ins for form regions, see <a href="http://go.microsoft.com/fwlink/?LinkId=87930">Extending a Form Region with an Add-in</a><b>FormRegionStartup</b>, see code sample downloads on MSDN.</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members />
</Type>