<Type Name="_Inspector" FullName="Microsoft.Office.Interop.Outlook._Inspector">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c0c4b10538c5018a1ef11ef94f135148361dc521" /><Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/12/2019" /><Meta Name="ms.locfileid" Value="27905910" /></Metadata><TypeSignature Language="C#" Value="public interface _Inspector" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Inspector" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook._Inspector" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Inspector" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Inspector" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00063005-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="20593-101">Il s’agit d’une interface principale dans une coclasse COM qui est requis par le code managé pour l’interopérabilité avec l’objet COM correspondant.</span><span class="sxs-lookup"><span data-stu-id="20593-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span></span> <span data-ttu-id="20593-102">Utilisez cette interface principale uniquement lorsque la méthode que vous souhaitez utiliser partageant le même nom qu’un événement de l’objet COM ; Dans ce cas, effectuez un cast à cette interface pour appeler la méthode et dans l’interface d’événements le plus récent pour se connecter à l’événement.</span><span class="sxs-lookup"><span data-stu-id="20593-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span></span> <span data-ttu-id="20593-103">Sinon, utilisez l’interface .NET est dérivé de la coclasse COM pour accéder aux méthodes, propriétés et événements de l’objet COM.</span><span class="sxs-lookup"><span data-stu-id="20593-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span></span> <span data-ttu-id="20593-104">Pour plus d’informations sur l’objet COM, voir <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" />.</span><span class="sxs-lookup"><span data-stu-id="20593-104">For information about the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Inspector.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8467)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20593-105">Active une fenêtre d'inspecteur en la plaçant au premier plan et en définissant la sélection du clavier.</span><span class="sxs-lookup"><span data-stu-id="20593-105">Activates an inspector window by bringing it to the foreground and setting keyboard focus.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Inspector.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Application ^ Application { Microsoft::Office::Interop::Outlook::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20593-106">Renvoie un <see cref="T:Microsoft.Office.Interop.Outlook.Application" /> object qui représente l’application Outlook de l’objet parent.</span><span class="sxs-lookup"><span data-stu-id="20593-106">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Application" />  object that represents the parent Outlook application for the  object.</span></span> <span data-ttu-id="20593-107">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="20593-107">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachmentSelection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.AttachmentSelection AttachmentSelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.AttachmentSelection AttachmentSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Inspector.AttachmentSelection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttachmentSelection As AttachmentSelection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::AttachmentSelection ^ AttachmentSelection { Microsoft::Office::Interop::Outlook::AttachmentSelection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64632)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64632)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.AttachmentSelection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20593-108">Obtient un <see cref="T:Microsoft.Office.Interop.Outlook.AttachmentSelection" /> objet constitué d’une ou plusieurs pièces jointes sélectionnées dans l’inspecteur.</span><span class="sxs-lookup"><span data-stu-id="20593-108">Obtains an <see cref="T:Microsoft.Office.Interop.Outlook.AttachmentSelection" /> object consisting of one or more attachments that are selected in the inspector.</span></span> <span data-ttu-id="20593-109">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="20593-109">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Inspector.Caption" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8465)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8465)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20593-110">Renvoie une <b>chaîne</b> (<b>string</b> en c#) qui représente le titre.</span><span class="sxs-lookup"><span data-stu-id="20593-110">Returns a <b>String</b> (<b>string</b> in C#) representing the title.</span></span> <span data-ttu-id="20593-111">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="20593-111">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlObjectClass Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlObjectClass Class" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Inspector.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As OlObjectClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlObjectClass Class { Microsoft::Office::Interop::Outlook::OlObjectClass get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlObjectClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20593-112">Renvoie un <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constante indiquant la classe de l’objet.</span><span class="sxs-lookup"><span data-stu-id="20593-112">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constant indicating the object's class.</span></span> <span data-ttu-id="20593-113">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="20593-113">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (Microsoft.Office.Interop.Outlook.OlInspectorClose SaveMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close([in]valuetype Microsoft.Office.Interop.Outlook.OlInspectorClose SaveMode) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Inspector.Close(Microsoft.Office.Interop.Outlook.OlInspectorClose)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (SaveMode As OlInspectorClose)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close(Microsoft::Office::Interop::Outlook::OlInspectorClose SaveMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SaveMode" Type="Microsoft.Office.Interop.Outlook.OlInspectorClose" />
      </Parameters>
      <Docs>
        <param name="SaveMode"><span data-ttu-id="20593-p106">Comportement de la fermeture. Si l'élément affiché dans l'inspecteur n'a pas été modifié, cet argument n'a aucun effet.</span><span class="sxs-lookup"><span data-stu-id="20593-p106">The close behavior. If the item displayed within the inspector has not been changed, this argument has no effect.</span></span></param>
        <summary><span data-ttu-id="20593-116">Ferme la <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" /> et enregistre de manière facultative les modifications à l’élément Outlook affiché.</span><span class="sxs-lookup"><span data-stu-id="20593-116">Closes the  <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" /> and optionally saves changes to the displayed Outlook item.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CommandBars CommandBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CommandBars CommandBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Inspector.CommandBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBars As CommandBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CommandBars ^ CommandBars { Microsoft::Office::Core::CommandBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8448)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8448)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CommandBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20593-117">Cet objet, ce membre ou cette énumération est déconseillé et n'est pas destiné à être utilisé dans votre code.</span><span class="sxs-lookup"><span data-stu-id="20593-117">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentItem">
      <MemberSignature Language="C#" Value="public object CurrentItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentItem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Inspector.CurrentItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentItem { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20593-p107">Renvoie une valeur de type <b>Object</b> qui représente l'élément actif affiché dans l'inspecteur. Lecture seule.</span><span class="sxs-lookup"><span data-stu-id="20593-p107">Returns an <b>Object</b> representing the current item being displayed in the inspector. Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="20593-120">Si aucun élément n'est ouvert, un message d'erreur est renvoyé.</span><span class="sxs-lookup"><span data-stu-id="20593-120">If no item is currently open, an error message will be returned.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Display">
      <MemberSignature Language="C#" Value="public void Display (object Modal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Display([in]object Modal) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Inspector.Display(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Display (Optional Modal As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8452)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Modal" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Modal"><span data-ttu-id="20593-p108"><b>True</b> pour que la fenêtre soit modale. La valeur par défaut est <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="20593-p108"><b>True</b> to make the window modal. The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="20593-123">Affiche un nouvel <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" /> objet pour l’élément.</span><span class="sxs-lookup"><span data-stu-id="20593-123">Displays a new <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" /> object for the item.</span></span></summary>
        <remarks><para><span data-ttu-id="20593-124">La méthode <b>Display</b> est prise en charge pour les fenêtres d’Explorateur et inspecteur pour des raisons de compatibilité descendante.</span><span class="sxs-lookup"><span data-stu-id="20593-124">The <b>Display</b> method is supported for explorer and inspector windows for the sake of backward compatibility.</span></span> <span data-ttu-id="20593-125">Pour activer une fenêtre d’Explorateur ou d’inspecteur, utilisez la <see cref="M:Microsoft.Office.Interop.Outlook._Inspector.Activate" /> méthode.</span><span class="sxs-lookup"><span data-stu-id="20593-125">To activate an explorer or inspector window, use the <see cref="M:Microsoft.Office.Interop.Outlook._Inspector.Activate" /> method.</span></span></para>
          <para><span data-ttu-id="20593-126">Si vous essayez d’ouvrir un objet système de fichiers « dangereux » (ou un fichier « freedoc ») à l’aide du modèle objet Microsoft Outlook, vous recevez le code de retour E_FAIL dans les langages de programmation C ou C++.</span><span class="sxs-lookup"><span data-stu-id="20593-126">If you attempt to open an "unsafe" file system object (or "freedoc" file) by using the Microsoft Outlook object model, you receive the E_FAIL return code in the C or C++ programming languages.</span></span> <span data-ttu-id="20593-127">Dans Outlook 2000 et versions antérieures, vous pouviez ouvrir un objet de système de fichiers qui n’était « pas sûr » à l’aide de la méthode <b>Display</b>.</span><span class="sxs-lookup"><span data-stu-id="20593-127">In Outlook 2000 and earlier, you could open an "unsafe" file system object by using the <b>Display</b> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EditorType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlEditorType EditorType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlEditorType EditorType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Inspector.EditorType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditorType As OlEditorType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlEditorType EditorType { Microsoft::Office::Interop::Outlook::OlEditorType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8464)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8464)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlEditorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20593-128">Renvoie un <see cref="T:Microsoft.Office.Interop.Outlook.OlEditorType" /> constante indiquant le type de l’éditeur.</span><span class="sxs-lookup"><span data-stu-id="20593-128">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.OlEditorType" /> constant indicating the type of editor.</span></span> <span data-ttu-id="20593-129">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="20593-129">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="20593-130">Depuis Microsoft Office Outlook 2007, la propriété <b>EditorType</b> renvoie toujours olEditorWord.</span><span class="sxs-lookup"><span data-stu-id="20593-130">Since Microsoft Office Outlook 2007, the <b>EditorType</b> property always returns olEditorWord.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Inspector.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Height { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8468)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8468)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(8468)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20593-131">Cette propriété renvoie ou définit une valeur d' <b>entier</b> (<b>int</b> en c#) spécifiant la hauteur (en pixels) de la fenêtre d’inspecteur.</span><span class="sxs-lookup"><span data-stu-id="20593-131">Returns or sets an <b>Integer</b> (<b>int</b> in C#) value specifying the height (in pixels) of the inspector window.</span></span> <span data-ttu-id="20593-132">Lecture-écriture.</span><span class="sxs-lookup"><span data-stu-id="20593-132">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HideFormPage">
      <MemberSignature Language="C#" Value="public void HideFormPage (string PageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HideFormPage([in]string PageName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Inspector.HideFormPage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub HideFormPage (PageName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void HideFormPage(System::String ^ PageName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8456)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PageName"><span data-ttu-id="20593-133">Le nom complet de la page de formulaire, ou le nom interne d’une zone de formulaire pour être masquée.</span><span class="sxs-lookup"><span data-stu-id="20593-133">The display name of the form page, or the internal name of a form region to be hidden.</span></span></param>
        <summary><span data-ttu-id="20593-134">Masque une page de formulaire ou d’une zone de formulaire dans l’inspecteur.</span><span class="sxs-lookup"><span data-stu-id="20593-134">Hides a form page or form region in the inspector.</span></span></summary>
        <remarks><para><span data-ttu-id="20593-135">Vous pouvez utiliser <b>HideFormRegion</b> pour masquer une zone de formulaire en spécifiant le <see cref="P:Microsoft.Office.Interop.Outlook._FormRegion.InternalName" /> propriété de la zone de formulaire, si la zone de formulaire est une adjoining ou une zone de formulaire distincte.</span><span class="sxs-lookup"><span data-stu-id="20593-135">You can use <b>HideFormRegion</b> to hide a form region by specifying the <see cref="P:Microsoft.Office.Interop.Outlook._FormRegion.InternalName" /> property of the form region, if the form region is an adjoining or separate form region.</span></span> <span data-ttu-id="20593-136">Uniquement le complément qui implémente la zone de formulaire peut masquer la zone de formulaire.</span><span class="sxs-lookup"><span data-stu-id="20593-136">Only the add-in that implements the form region can hide the form region.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HTMLEditor">
      <MemberSignature Language="C#" Value="public object HTMLEditor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HTMLEditor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Inspector.HTMLEditor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HTMLEditor As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HTMLEditor { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8462)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8462)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20593-137">Cet objet, ce membre ou cette énumération est déconseillé et n'est pas destiné à être utilisé dans votre code.</span><span class="sxs-lookup"><span data-stu-id="20593-137">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWordMail">
      <MemberSignature Language="C#" Value="public bool IsWordMail ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsWordMail() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Inspector.IsWordMail" />
      <MemberSignature Language="VB.NET" Value="Public Function IsWordMail () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsWordMail();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8453)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20593-138">Détermine si le message électronique associé à un inspecteur s’affiche dans Outlook <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" /> ou dans Microsoft Word.</span><span class="sxs-lookup"><span data-stu-id="20593-138">Determines whether the mail message associated with an inspector is displayed in an Outlook <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" />  or in Microsoft Word.</span></span></summary>
        <returns><span data-ttu-id="20593-139">Renvoie <b>True</b> si le message électronique s'affiche dans Microsoft Word (autrement dit, si vous utilisez Word Mail) ; sinon, renvoie <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="20593-139"><b>True</b> if the mail message is displayed in Microsoft Word (that is, if Word Mail is in use); otherwise, <b>False</b>.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public int Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Inspector.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Left { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8469)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8469)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(8469)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20593-140">Cette propriété renvoie ou définit une valeur d' <b>entier</b> (<b>int</b> en c#) spécifiant la position (en pixels) du bord gauche d’une fenêtre d’inspecteur à partir du bord de l’écran.</span><span class="sxs-lookup"><span data-stu-id="20593-140">Returns or sets an <b>Integer</b> (<b>int</b> in C#) value specifying the position (in pixels) of the left vertical edge of an inspector window from the edge of the screen.</span></span> <span data-ttu-id="20593-141">Lecture-écriture.</span><span class="sxs-lookup"><span data-stu-id="20593-141">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifiedFormPages">
      <MemberSignature Language="C#" Value="public object ModifiedFormPages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ModifiedFormPages" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Inspector.ModifiedFormPages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModifiedFormPages As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ModifiedFormPages { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8454)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8454)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20593-142">Renvoie le <see cref="T:Microsoft.Office.Interop.Outlook.Pages" /> collection qui représente toutes les pages de l’élément dans l’inspecteur.</span><span class="sxs-lookup"><span data-stu-id="20593-142">Returns the <see cref="T:Microsoft.Office.Interop.Outlook.Pages" />  collection that represents all the pages for the item in the inspector.</span></span> <span data-ttu-id="20593-143">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="20593-143">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="20593-144">La principale page et jusqu'à 5 pages personnalisables peut être obtenu à l’aide de la <see cref="M:Microsoft.Office.Interop.Outlook.Pages.Add(System.Object)" /> méthode.</span><span class="sxs-lookup"><span data-stu-id="20593-144">The main page and up to five customizable pages can be obtained using the <see cref="M:Microsoft.Office.Interop.Outlook.Pages.Add(System.Object)" />  method.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NewFormRegion">
      <MemberSignature Language="C#" Value="public object NewFormRegion ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object NewFormRegion() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Inspector.NewFormRegion" />
      <MemberSignature Language="VB.NET" Value="Public Function NewFormRegion () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ NewFormRegion();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20593-145">Ouvre une nouvelle page en mode Création dans l’inspecteur pour une nouvelle zone de formulaire.</span><span class="sxs-lookup"><span data-stu-id="20593-145">Opens a new page in design mode in the inspector for a new form region.</span></span></summary>
        <returns><span data-ttu-id="20593-146">Objet qui représente la page qui affiche la zone de formulaire dans l'inspecteur.</span><span class="sxs-lookup"><span data-stu-id="20593-146">An Object that represents the page displaying the form region in the inspector.</span></span></returns>
        <remarks><para><span data-ttu-id="20593-147">Si l'inspecteur n'est pas déjà en mode Création, <b>NewFormRegion</b> le met en mode Création.</span><span class="sxs-lookup"><span data-stu-id="20593-147">If the inspector is not already in design mode, <b>NewFormRegion</b> will put it in design mode.</span></span></para>
          <para><span data-ttu-id="20593-p117">Cette méthode ouvre seulement une page pour une nouvelle zone de formulaire en mode Création. Cette méthode n'est pas destinée à créer une zone de formulaire lors de l'exécution.</span><span class="sxs-lookup"><span data-stu-id="20593-p117">This method only opens a page for a new form region in design mode. This method is not intended for creating a form region at runtime.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenFormRegion">
      <MemberSignature Language="C#" Value="public object OpenFormRegion (string Path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object OpenFormRegion([in]string Path) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Inspector.OpenFormRegion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenFormRegion (Path As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ OpenFormRegion(System::String ^ Path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64511)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Path"><span data-ttu-id="20593-150">Chemin d'accès complet de fichier local complet au fichier Outlook Form Storage (.OFS) pour la zone de formulaire qui doit être ouverte dans l'inspecteur.</span><span class="sxs-lookup"><span data-stu-id="20593-150">A full local file path to the Outlook Form Storage (.OFS) file for the form region that is to be opened in the inspector.</span></span></param>
        <summary><span data-ttu-id="20593-151">Ouvre une page en mode Création dans l'inspecteur pour la zone de formulaire spécifiée.</span><span class="sxs-lookup"><span data-stu-id="20593-151">Opens a page in design mode in the inspector for the specified form region.</span></span></summary>
        <returns><span data-ttu-id="20593-152">Objet qui représente la page qui affiche la zone de formulaire dans l'inspecteur.</span><span class="sxs-lookup"><span data-stu-id="20593-152">An Object that represents the page displaying the form region in the inspector.</span></span></returns>
        <remarks><para><span data-ttu-id="20593-153">Si l'inspecteur n'est pas déjà en mode Création, <b>OpenFormRegion</b> le met en mode Création.</span><span class="sxs-lookup"><span data-stu-id="20593-153">If the inspector is not already in design mode, <b>OpenFormRegion</b> will put it in design mode.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Inspector.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20593-p118">Renvoie la valeur de type <b>Object</b> parent de l’objet spécifié. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="20593-p118">Returns the parent <b>Object</b> of the specified object. Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveFormRegion">
      <MemberSignature Language="C#" Value="public void SaveFormRegion (object Page, string FileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveFormRegion([in]object Page, [in]string FileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Inspector.SaveFormRegion(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveFormRegion (Page As Object, FileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveFormRegion(System::Object ^ Page, System::String ^ FileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64512)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Page" Type="System.Object" />
        <Parameter Name="FileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Page"><span data-ttu-id="20593-156">Page qui affiche la zone de formulaire dans l'inspecteur.</span><span class="sxs-lookup"><span data-stu-id="20593-156">The page displaying the form region in the inspector.</span></span></param>
        <param name="FileName"><span data-ttu-id="20593-157">Chemin d'accès complet de fichier local à un fichier Outlook Form Storage (.OFS) dans lequel la zone de formulaire est enregistrée.</span><span class="sxs-lookup"><span data-stu-id="20593-157">The full local file path to an Outlook Form Storage (.OFS) file that the form region is being saved to.</span></span></param>
        <summary><span data-ttu-id="20593-158">Enregistre la page spécifiée en mode Création dans l’inspecteur dans le fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="20593-158">Saves the specified page in design mode in the inspector to the specified file.</span></span></summary>
        <remarks><para><span data-ttu-id="20593-159">Afin que <b>SaveFormRegion</b> enregistre la zone de formulaire, la zone de formulaire doit avoir été chargée en mode Création dans l'inspecteur.</span><span class="sxs-lookup"><span data-stu-id="20593-159">In order for <b>SaveFormRegion</b> to save the form region, the form region must have been loaded in design mode in the inspector.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.NameSpace Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.NameSpace Session" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Inspector.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As NameSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::NameSpace ^ Session { Microsoft::Office::Interop::Outlook::NameSpace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.NameSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20593-160">Renvoie le <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" /> objet pour la session active.</span><span class="sxs-lookup"><span data-stu-id="20593-160">Returns the <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />  object for the current session.</span></span> <span data-ttu-id="20593-161">En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="20593-161">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="20593-162">La propriété <b>Session</b> et la <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> méthode peut être utilisée de façon interchangeable pour obtenir l’objet <b>NameSpace</b> pour la session active.</span><span class="sxs-lookup"><span data-stu-id="20593-162">The <b>Session</b> property and the <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> method can be used interchangeably to obtain the <b>NameSpace</b> object for the current session.</span></span> <span data-ttu-id="20593-163">Les deux membres ont la même fonction.</span><span class="sxs-lookup"><span data-stu-id="20593-163">Both members serve the same purpose.</span></span> <span data-ttu-id="20593-164">Par exemple, les paires d’instructions suivantes effectuent la même fonction :</span><span class="sxs-lookup"><span data-stu-id="20593-164">For example, the following pairs of statements perform the same function:</span></span></para>
          <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
          <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
          <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
          <code>Outlook.NameSpace objSession = Application.Session;</code>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetControlItemProperty">
      <MemberSignature Language="C#" Value="public void SetControlItemProperty (object Control, string PropertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetControlItemProperty([in]object Control, [in]string PropertyName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Inspector.SetControlItemProperty(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetControlItemProperty (Control As Object, PropertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetControlItemProperty(System::Object ^ Control, System::String ^ PropertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64201)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Object" />
        <Parameter Name="PropertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Control"><span data-ttu-id="20593-165">Contrôle qui sera lié à une propriété.</span><span class="sxs-lookup"><span data-stu-id="20593-165">The control that will be bound to a property.</span></span></param>
        <param name="PropertyName"><span data-ttu-id="20593-166">Nom de la propriété qui sera liée au contrôle.</span><span class="sxs-lookup"><span data-stu-id="20593-166">The name of the property that will be bound to the control.</span></span></param>
        <summary><span data-ttu-id="20593-167">Lie une propriété prédéfinie ou personnalisée à un contrôle dans un inspecteur.</span><span class="sxs-lookup"><span data-stu-id="20593-167">Binds a built-in property or custom property to a control in an inspector.</span></span></summary>
        <remarks><para><span data-ttu-id="20593-168">Vous pouvez utiliser cette méthode pour lier une propriété intégrée explicite ou une propriété personnalisée à un contrôle.</span><span class="sxs-lookup"><span data-stu-id="20593-168">You can use this method to bind an explicit built-in property or a custom property to a control.</span></span> <span data-ttu-id="20593-169">Vous devez faire référence la propriété par son nom de chaîne, par exemple, <b>Subject</b>et non par espace de noms, par exemple, http://schemas.microsoft.com/mapi/proptag/0x0037001E.</span><span class="sxs-lookup"><span data-stu-id="20593-169">You must reference the property by its string name, for example, <b>Subject</b>, and not by namespace, for example, http://schemas.microsoft.com/mapi/proptag/0x0037001E.</span></span></para>
          <para><span data-ttu-id="20593-170">Le <paramref name="PropertyName" /> paramètre n’est pas la casse.</span><span class="sxs-lookup"><span data-stu-id="20593-170">The <paramref name="PropertyName" /> parameter is not case-sensitive.</span></span> <span data-ttu-id="20593-171">Par exemple, <b>SetControlItemProperty</b> interprète un argument, <b>CustomerId</b>, soit identique à <b>CustomerID</b> et lie le contrôle spécifié à l’intégré <see cref="P:Microsoft.Office.Interop.Outlook._ContactItem.CustomerID" /> propriété.</span><span class="sxs-lookup"><span data-stu-id="20593-171">For example, <b>SetControlItemProperty</b> interprets an argument, <b>CustomerId</b>, to be the same as <b>CustomerID</b> and binds the specified control to the built-in <see cref="P:Microsoft.Office.Interop.Outlook._ContactItem.CustomerID" /> property.</span></span></para>
          <para><span data-ttu-id="20593-172">Vous pouvez également utiliser la ligne suivante de code myPage.Controls("bar"). ItemProperty = « subject » pour lier la propriété subject à un contrôle.</span><span class="sxs-lookup"><span data-stu-id="20593-172">You can also use the following line of code myPage.Controls("bar").ItemProperty = "subject"  to bind the subject property to a control.</span></span> <span data-ttu-id="20593-173">Toutefois, notez que du code non approuvé à l’aide de ce déclenche un avertissement de sécurité si la propriété est protégée par la protection de sécurité du modèle objet telles que <b>à</b>, et l’ordinateur client exécutant Microsoft Office Outlook 2007 ou versions ultérieures, mais n’est pas un configuré correctement le logiciel antivirus.</span><span class="sxs-lookup"><span data-stu-id="20593-173">However, note that untrusted code using this will trigger a security warning if the property is protected by the object model security guard such as <b>To</b>, and the client computer is running Microsoft Office Outlook 2007 or later but does not have an appropriately set up antivirus software.</span></span> <span data-ttu-id="20593-174">Vous pouvez utiliser la méthode <b>SetControlItemProperty</b> pour éviter les avertissements de sécurité avec les applications approuvées.</span><span class="sxs-lookup"><span data-stu-id="20593-174">You can use the <b>SetControlItemProperty</b> method to avoid security warnings with trusted applications.</span></span>  <span data-ttu-id="20593-175">Pour plus d’informations, voir le <a href="http://go.microsoft.com/fwlink/?LinkId=87941">Comportement de sécurité du modèle objet Outlook</a></span><span class="sxs-lookup"><span data-stu-id="20593-175">For more information, see <a href="http://go.microsoft.com/fwlink/?LinkId=87941">Security Behavior of the Outlook Object Model</a></span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCurrentFormPage">
      <MemberSignature Language="C#" Value="public void SetCurrentFormPage (string PageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCurrentFormPage([in]string PageName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Inspector.SetCurrentFormPage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCurrentFormPage (PageName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCurrentFormPage(System::String ^ PageName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8460)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PageName"><span data-ttu-id="20593-176">Le nom complet de la page de formulaire, ou le nom interne de la zone de formulaire.</span><span class="sxs-lookup"><span data-stu-id="20593-176">The display name of the form page, or the internal name of the form region.</span></span></param>
        <summary><span data-ttu-id="20593-177">Affiche la page de formulaire spécifiée ou d’une zone de formulaire dans l’inspecteur.</span><span class="sxs-lookup"><span data-stu-id="20593-177">Displays the specified form page or form region in the inspector.</span></span></summary>
        <remarks><para><span data-ttu-id="20593-178"><b>SetCurrentFormPage</b> vous permet d’afficher une zone de formulaire en spécifiant le <see cref="P:Microsoft.Office.Interop.Outlook._FormRegion.InternalName" /> propriété de la zone de formulaire, si la zone de formulaire est un a distinct, remplacer, ou la région de formulaire de remplacement.</span><span class="sxs-lookup"><span data-stu-id="20593-178">You can use <b>SetCurrentFormPage</b> to display a form region by specifying the <see cref="P:Microsoft.Office.Interop.Outlook._FormRegion.InternalName" /> property of the form region, if the form region is an a separate, replace, or replace-all form region.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSchedulingStartTime">
      <MemberSignature Language="C#" Value="public void SetSchedulingStartTime (DateTime Start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSchedulingStartTime([in]valuetype System.DateTime Start) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Inspector.SetSchedulingStartTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSchedulingStartTime (Start As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSchedulingStartTime(DateTime Start);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64647)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="Start"><span data-ttu-id="20593-179">Début de la plage horaire dont l’onglet Assistant Planification de l’inspecteur affiche la disponibilité pour les informations des participants.</span><span class="sxs-lookup"><span data-stu-id="20593-179">The beginning of the time range that the Scheduling Assistant tab of the inspector displays free/busy times for meeting attendees.</span></span></param>
        <summary><span data-ttu-id="20593-180">Définit l’heure de début pour un élément de réunion dans la grille de disponibilité sous l’onglet Assistant Planification de l’inspecteur.</span><span class="sxs-lookup"><span data-stu-id="20593-180">Sets the start time for a meeting item in the free/busy grid on the Scheduling Assistant tab of the inspector.</span></span></summary>
        <remarks><para><span data-ttu-id="20593-181">L’objet spécifié par le <see cref="P:Microsoft.Office.Interop.Outlook._Inspector.CurrentItem" /> propriété du parent <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" /> objet doit être un <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> ou <see cref="T:Microsoft.Office.Interop.Outlook.MeetingItem" />.</span><span class="sxs-lookup"><span data-stu-id="20593-181">The object specified by the <see cref="P:Microsoft.Office.Interop.Outlook._Inspector.CurrentItem" /> property of the parent <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" /> object must be an <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> or <see cref="T:Microsoft.Office.Interop.Outlook.MeetingItem" />.</span></span> <span data-ttu-id="20593-182">L’onglet Assistant planification doit être affiché dans l’inspecteur, sinon Microsoft Outlook génère une erreur.</span><span class="sxs-lookup"><span data-stu-id="20593-182">The Scheduling Assistant tab must be displayed in the inspector, otherwise Microsoft Outlook raises an error.</span></span> <span data-ttu-id="20593-183">Si Outlook ne peut pas afficher l’onglet Assistant Planification pour ce type d’élément, Outlook affiche le message d’erreur suivant : l’heure de début de planification ne peut être définie que lorsque l’Assistant Planification est affiché sur un élément de réunion.</span><span class="sxs-lookup"><span data-stu-id="20593-183">If Outlook cannot display the Scheduling Assistant tab for that item type, Outlook displays the following error: The scheduling start time can only be set when the Scheduling Assistant is displayed on a meeting item.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowFormPage">
      <MemberSignature Language="C#" Value="public void ShowFormPage (string PageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowFormPage([in]string PageName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Inspector.ShowFormPage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowFormPage (PageName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowFormPage(System::String ^ PageName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8457)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PageName"><span data-ttu-id="20593-184">Le nom complet de la page de formulaire, ou le nom interne d’une zone de formulaire à afficher.</span><span class="sxs-lookup"><span data-stu-id="20593-184">The display name of the form page, or the internal name of a form region to be shown.</span></span></param>
        <summary><span data-ttu-id="20593-185">Affiche un bouton dans le groupe Afficher du ruban Microsoft Office Fluent pour l’inspecteur, en cliquant sur qui affiche la zone de formulaire ou de la page spécifiée par <paramref name="PageName" />.</span><span class="sxs-lookup"><span data-stu-id="20593-185">Displays a button in the Show group of the Microsoft Office Fluent ribbon for the inspector, clicking which will show the page or form region specified by <paramref name="PageName" />.</span></span></summary>
        <remarks><para><span data-ttu-id="20593-186">Pour les zones de formulaire, vous pouvez utiliser <b>ShowFormPage</b> pour afficher le bouton en spécifiant le <see cref="P:Microsoft.Office.Interop.Outlook._FormRegion.InternalName" /> propriété de la zone de formulaire, si la zone de formulaire est une adjoining ou une zone de formulaire distincte.</span><span class="sxs-lookup"><span data-stu-id="20593-186">For form regions, you can use <b>ShowFormPage</b> to display the button by specifying the <see cref="P:Microsoft.Office.Interop.Outlook._FormRegion.InternalName" /> property of the form region, if the form region is an adjoining or separate form region.</span></span> <span data-ttu-id="20593-187">Uniquement le complément qui implémente la zone de formulaire permettre utiliser <b>ShowFormRegion</b> pour afficher le bouton.</span><span class="sxs-lookup"><span data-stu-id="20593-187">Only the add-in that implements the form region can use <b>ShowFormRegion</b> to display the button.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public int Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Inspector.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Top { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8470)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8470)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(8470)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20593-188">Cette propriété renvoie ou définit une valeur d' <b>entier</b> (<b>int</b> en c#) indiquant la position (en pixels) du bord supérieur horizontal d’une fenêtre d’inspecteur à partir du bord de l’écran.</span><span class="sxs-lookup"><span data-stu-id="20593-188">Returns or sets an <b>Integer</b> (<b>int</b> in C#) value indicating the position (in pixels) of the top horizontal edge of an inspector window from the edge of the screen.</span></span> <span data-ttu-id="20593-189">Lecture-écriture.</span><span class="sxs-lookup"><span data-stu-id="20593-189">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Inspector.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Width { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8471)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8471)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(8471)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20593-190">Cette propriété renvoie ou définit une valeur d' <b>entier</b> (<b>int</b> en c#) indiquant la largeur (en pixels) de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="20593-190">Returns or sets an <b>Integer</b> (<b>int</b> in C#) value indicating the width (in pixels) of the specified object.</span></span> <span data-ttu-id="20593-191">Lecture-écriture.</span><span class="sxs-lookup"><span data-stu-id="20593-191">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlWindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlWindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Inspector.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowState As OlWindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlWindowState WindowState { Microsoft::Office::Interop::Outlook::OlWindowState get(); void set(Microsoft::Office::Interop::Outlook::OlWindowState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8466)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8466)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(8466)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlWindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20593-192">Cette propriété renvoie ou définit la propriété avec une constante dans la <see cref="T:Microsoft.Office.Interop.Outlook.OlWindowState" /> énumération spécifiant l’état de la fenêtre d’une fenêtre d’Explorateur ou d’inspecteur.</span><span class="sxs-lookup"><span data-stu-id="20593-192">Returns or sets the property with a constant in the  <see cref="T:Microsoft.Office.Interop.Outlook.OlWindowState" /> enumeration specifying the window state of an explorer or inspector window.</span></span> <span data-ttu-id="20593-193">Lecture-écriture.</span><span class="sxs-lookup"><span data-stu-id="20593-193">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WordEditor">
      <MemberSignature Language="C#" Value="public object WordEditor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WordEditor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Inspector.WordEditor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WordEditor As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ WordEditor { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8463)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8463)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20593-p129">Renvoie le modèle d’objet document Microsoft Word du message affiché. En lecture seule.</span><span class="sxs-lookup"><span data-stu-id="20593-p129">Returns the Microsoft Word Document Object Model of the  message being displayed. Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="20593-196">La propriété <b>WordEditor</b> n’est valide que si <see cref="M:Microsoft.Office.Interop.Outlook._Inspector.IsWordMail" /> renvoie <b>la valeur True</b> et la <see cref="P:Microsoft.Office.Interop.Outlook._Inspector.EditorType" /> a la <b>valeur olEditorWord</b>.</span><span class="sxs-lookup"><span data-stu-id="20593-196">The <b>WordEditor</b> property is only valid if <see cref="M:Microsoft.Office.Interop.Outlook._Inspector.IsWordMail" /> returns <b>True</b> and the <see cref="P:Microsoft.Office.Interop.Outlook._Inspector.EditorType" /> is <b>olEditorWord</b>.</span></span> <span data-ttu-id="20593-197">L’objet <b>WordDocument</b> renvoyé fournit l’accès à la plupart du modèle objet Word à l’exception des membres suivants :</span><span class="sxs-lookup"><span data-stu-id="20593-197">The returned <b>WordDocument</b> object provides access to most of the Word object model except for the following members:</span></span> </para>
          <list type="bullet">
            <item>
              <para><span data-ttu-id="20593-198">
                <b>Tables.Add</b>
              </span><span class="sxs-lookup"><span data-stu-id="20593-198">
                <b>Tables.Add</b>
              </span></span></para>
            </item>
            <item>
              <para><span data-ttu-id="20593-199">
                <b>Range.ConvertToTable</b>
              </span><span class="sxs-lookup"><span data-stu-id="20593-199">
                <b>Range.ConvertToTable</b>
              </span></span></para>
            </item>
            <item>
              <para><span data-ttu-id="20593-200">
                <b>InlineShapes.AddChart</b>
              </span><span class="sxs-lookup"><span data-stu-id="20593-200">
                <b>InlineShapes.AddChart</b>
              </span></span></para>
            </item>
            <item>
              <para><span data-ttu-id="20593-201">
                <b>Shapes.AddChart</b>
              </span><span class="sxs-lookup"><span data-stu-id="20593-201">
                <b>Shapes.AddChart</b>
              </span></span></para>
            </item>
            <item>
              <para><span data-ttu-id="20593-202">
                <b>Range.InsertXML</b>
              </span><span class="sxs-lookup"><span data-stu-id="20593-202">
                <b>Range.InsertXML</b>
              </span></span></para>
            </item>
            <item>
              <para><span data-ttu-id="20593-203">
                <b>Selection.InsertXML</b>
              </span><span class="sxs-lookup"><span data-stu-id="20593-203">
                <b>Selection.InsertXML</b>
              </span></span></para>
            </item>
            <item>
              <para><span data-ttu-id="20593-204">
                <b>Range.ImportFragment</b>
              </span><span class="sxs-lookup"><span data-stu-id="20593-204">
                <b>Range.ImportFragment</b>
              </span></span></para>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
