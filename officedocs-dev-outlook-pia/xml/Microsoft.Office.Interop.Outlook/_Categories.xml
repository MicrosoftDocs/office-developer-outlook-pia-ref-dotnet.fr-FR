<Type Name="_Categories" FullName="Microsoft.Office.Interop.Outlook._Categories">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ea42ac39cad667a54dbf4c84adf7f13ad84a7dd4" />
    <Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20633683" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _Categories : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Categories implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook._Categories" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Categories&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Categories : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000630E4-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="be1db-101">Il s’agit d’une interface principale dans une coclasse COM qui est requis par le code managé pour l’interopérabilité avec l’objet COM correspondant.</span>
      <span class="sxs-lookup">
        <span data-stu-id="be1db-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span>
      </span>
      <span data-ttu-id="be1db-102">Utilisez cette interface principale uniquement lorsque la méthode que vous souhaitez utiliser partageant le même nom qu’un événement de l’objet COM ; Dans ce cas, effectuez un cast à cette interface pour appeler la méthode et dans l’interface d’événements le plus récent pour se connecter à l’événement.</span>
      <span class="sxs-lookup">
        <span data-stu-id="be1db-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span>
      </span>
      <span data-ttu-id="be1db-103">Sinon, utilisez l’interface .NET est dérivé de la coclasse COM pour accéder aux méthodes, propriétés et événements de l’objet COM.</span>
      <span class="sxs-lookup">
        <span data-stu-id="be1db-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span>
      </span>
      <span data-ttu-id="be1db-104">Pour plus d’informations sur l’objet COM, voir <see cref="T:Microsoft.Office.Interop.Outlook.Categories" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="be1db-104">For information about the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook.Categories" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Category Add (string Name, object Color, object ShortcutKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Outlook.Category Add([in]string Name, [in]object Color, [in]object ShortcutKey) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Categories.Add(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Name As String, Optional Color As Object, Optional ShortcutKey As Object) As Category" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(95)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Category</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Color" Type="System.Object" />
        <Parameter Name="ShortcutKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="be1db-105">Nom de la nouvelle catégorie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be1db-105">The name of the new category.</span>
          </span>
        </param>
        <param name="Color">
          <span data-ttu-id="be1db-106">La couleur de la nouvelle catégorie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be1db-106">The color for the new category.</span>
          </span>
          <span data-ttu-id="be1db-107">Si aucune valeur n’est pas spécifié, la nouvelle catégorie est définie sur la première couleur (comme indiqué dans l’ordre de la <see cref="T:Microsoft.Office.Interop.Outlook.OlCategoryColor" /> énumération) qui est la moins utilisée, autrement dit, s’il existe des couleurs inutilisés, la nouvelle catégorie est définie sur la première couleur inutilisée dans <b>OlCategoryColor</b> énumération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be1db-107">If no value is specified, the new category is set to the first color (as specified in the order of the <see cref="T:Microsoft.Office.Interop.Outlook.OlCategoryColor" /> enumeration) that is the least used, That is, if there are unused colors, the new category is set to the first unused color in the <b>OlCategoryColor</b> enumeration.</span>
          </span>
          <span data-ttu-id="be1db-108">Si toutes les couleurs de l’énumération <b>OlCategoryColor</b> ont été utilisés, puis la nouvelle catégorie est définie pour la première couleur est utilisée au moins dans l’énumération <b>OlCategoryColor</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="be1db-108">If all colors in the <b>OlCategoryColor</b> enumeration have been used, then the new category is set to the first color that is used least in the <b>OlCategoryColor</b> enumeration.</span>
          </span>
        </param>
        <param name="ShortcutKey">
          <span data-ttu-id="be1db-p103">Touche de raccourci pour la nouvelle catégorie. Si aucune valeur n'est spécifiée, la valeur par défaut est <b>OlCategoryShortcutKeyNone</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be1db-p103">The shortcut key for the new category. If no value is specified, the default value is <b>OlCategoryShortcutKeyNone</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be1db-111">Crée une nouvelle <see cref="T:Microsoft.Office.Interop.Outlook.Category" /> objet et l’ajoute à la <see cref="T:Microsoft.Office.Interop.Outlook.Categories" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be1db-111">Creates a new <see cref="T:Microsoft.Office.Interop.Outlook.Category" /> object and appends it to the <see cref="T:Microsoft.Office.Interop.Outlook.Categories" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be1db-112">Objet <b>Category</b> qui représente la nouvelle catégorie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be1db-112">A <b>Category</b> object that represents the new category.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Categories.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Application ^ Application { Microsoft::Office::Interop::Outlook::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be1db-113">Renvoie un <see cref="T:Microsoft.Office.Interop.Outlook.Application" /> object qui représente l’application Outlook de l’objet parent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be1db-113">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Application" />  object that represents the parent Outlook application for the  object.</span>
          </span>
          <span data-ttu-id="be1db-114">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be1db-114">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlObjectClass Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlObjectClass Class" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Categories.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As OlObjectClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlObjectClass Class { Microsoft::Office::Interop::Outlook::OlObjectClass get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlObjectClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be1db-115">Renvoie un <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constante indiquant la classe de l’objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be1db-115">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constant indicating the object's class.</span>
          </span>
          <span data-ttu-id="be1db-116">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be1db-116">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Categories.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(80)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(80)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be1db-117">Renvoie une valeur d' <b>entier</b> (<b>int</b> en c#) indiquant le nombre de <see cref="T:Microsoft.Office.Interop.Outlook.Category" /> des objets dans la collection spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be1db-117">Returns an <b>Integer</b> (<b>int</b> in C#) value indicating the count of <see cref="T:Microsoft.Office.Interop.Outlook.Category" /> objects in the specified collection.</span>
          </span>
          <span data-ttu-id="be1db-118">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be1db-118">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Category this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Category Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Categories.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(Index As Object) As Category" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Category ^ default[System::Object ^] { Microsoft::Office::Interop::Outlook::Category ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Category</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="be1db-119">Soit une valeur d' <b>entier</b> (<b>int</b> en c#) représentant le numéro d’index de l’objet, soit une valeur de <b>chaîne</b> (<b>string</b> en c#) qui représente la <see cref="P:Microsoft.Office.Interop.Outlook._Category.Name" /> ou <see cref="P:Microsoft.Office.Interop.Outlook._Category.CategoryID" /> valeur de la propriété d’un objet dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be1db-119">Either an <b>Integer</b> (<b>int</b> in C#) value representing the index number of the object, or a <b>String</b> (<b>string</b> in C#) value representing either the <see cref="P:Microsoft.Office.Interop.Outlook._Category.Name" /> or <see cref="P:Microsoft.Office.Interop.Outlook._Category.CategoryID" /> property value of an object in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be1db-120">Renvoie un <see cref="T:Microsoft.Office.Interop.Outlook.Category" /> objet de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be1db-120">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Category" /> object from the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be1db-121">Objet <b>Category</b> qui représente l’objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be1db-121">A <b>Category</b> object that represents the specified object.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="be1db-122">
            <para>Si le nom d’une catégorie est spécifié dans <paramref name="Index" />, cette méthode retourne le premier objet <b>Category</b> qui correspond à la valeur spécifiée. Si une correspondance est introuvable, la méthode renvoie la valeur <b>Nothing</b> (une référence null (Nothing dans Visual Basic) en c#)</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="be1db-122">
              <para>If the name of a category  is specified in <paramref name="Index" />, this method returns the first <b>Category</b> object that matches the specified value. If a match cannot be found, the method returns <b>Nothing</b> (a null reference (Nothing in Visual Basic) in C#)</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Categories.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be1db-p107">Renvoie la valeur de type <b>Object</b> parent de l’objet spécifié. En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be1db-p107">Returns the parent <b>Object</b> of the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._Categories.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (Index As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Object ^ Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(82)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="be1db-125">Soit une valeur d' <b>entier</b> (<b>int</b> en c#) représentant le numéro d’index de l’objet, soit une valeur de <b>chaîne</b> (<b>string</b> en c#) qui représente la <see cref="P:Microsoft.Office.Interop.Outlook._Category.Name" /> ou <see cref="P:Microsoft.Office.Interop.Outlook._Category.CategoryID" /> valeur de la propriété d’un objet dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be1db-125">Either an <b>Integer</b> (<b>int</b> in C#) value representing the index number of the object, or a <b>String</b> (<b>string</b> in C#) value representing either the <see cref="P:Microsoft.Office.Interop.Outlook._Category.Name" /> or <see cref="P:Microsoft.Office.Interop.Outlook._Category.CategoryID" /> property value of an object in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be1db-126">Supprime un objet de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be1db-126">Removes an object from the collection.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="be1db-127">
            <para>Si le nom d’une catégorie est spécifié dans <paramref name="Index" />, cette méthode supprime le premier objet <b>Category</b> qui correspond à la valeur spécifiée.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="be1db-127">
              <para>If the name of a category  is specified in <paramref name="Index" />, this method removes the first <b>Category</b> object that matches the specified value.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.NameSpace Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.NameSpace Session" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._Categories.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As NameSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::NameSpace ^ Session { Microsoft::Office::Interop::Outlook::NameSpace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.NameSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be1db-128">Renvoie le <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" /> objet pour la session active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be1db-128">Returns the <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />  object for the current session.</span>
          </span>
          <span data-ttu-id="be1db-129">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be1db-129">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="be1db-130">
            <para>La propriété <b>Session</b> et la <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> méthode peut être utilisée de façon interchangeable pour obtenir l’objet <b>NameSpace</b> pour la session active. Les deux membres ont la même fonction. Par exemple, les paires d’instructions suivantes effectuent la même fonction :</para>
            <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
            <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
            <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
            <code>Outlook.NameSpace objSession = Application.Session;</code>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="be1db-130">
              <para>The <b>Session</b> property and the <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> method can be used interchangeably to obtain the <b>NameSpace</b> object for the current session. Both members serve the same purpose. For example, the following pairs of statements perform the same function:</para>
              <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
              <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
              <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
              <code>Outlook.NameSpace objSession = Application.Session;</code>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>