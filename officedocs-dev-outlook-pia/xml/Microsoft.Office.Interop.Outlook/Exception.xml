<Type Name="Exception" FullName="Microsoft.Office.Interop.Outlook.Exception">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9b115b7a385cbe53cefdab4d3a549f6f64635e72" />
    <Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20634391" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Exception" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Exception" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook.Exception" />
  <TypeSignature Language="VB.NET" Value="Public Interface Exception" />
  <TypeSignature Language="C++ CLI" Value="public interface class Exception" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0006304D-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="dae2e-101">Représente les informations relatives à une instance d’un <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> objet qui est une exception à une série périodique.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dae2e-101">Represents information about one instance of an <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" />  object which is an exception to a recurring series.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="dae2e-102">
        <para>Contrairement à la plupart des autres objets Microsoft Outlook, l’objet <b>Exception</b> est un objet en lecture seule. Cela signifie que vous ne pouvez pas créer un objet <b>Exception</b> mais, au lieu de cela, l’objet est créé lorsqu’une propriété d’un <b>objet AppointmentItem</b> est modifiée. Par exemple, si vous modifiez le <see cref="P:Microsoft.Office.Interop.Outlook._AppointmentItem.Start" /> propriété d' un <b>objet AppointmentItem</b>, vous avez créé une <b>Exception</b> dans <b>AppointmentItem.RecurrencePattern.Exceptions</b>.</para>
        <para>
          <b>Remarque</b>: le <see cref="T:Microsoft.Office.Interop.Outlook.Exceptions" /> objet est sur le <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> , pas l’objet <b>AppointmentItem</b> proprement dit.</para>
        <para>Lorsque vous travaillez avec des éléments de rendez-vous périodiques, vous devez libérer tout avant références, obtenir de nouvelles références à l’élément de rendez-vous périodiques avant d’accéder ou modifier l’élément et libérer les références dès que vous avez terminé et que vous avez enregistré le modifications apportées. Cela s’applique à l’abonnement <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> objet et tous <see cref="T:Microsoft.Office.Interop.Outlook.Exception" /> ou <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> objet. Pour libérer une référence dans Visual Basic, définissez existant de cet objet sur <b>Nothing</b>. En c#, libérer explicitement la mémoire pour cet objet. </para>
        <para>Notez que même après avoir libérer la référence et tenter d’obtenir une référence, s’il existe toujours une référence active, organisée par un autre complément ou Outlook, à un des objets ci-dessus, votre nouvelle référence pointe toujours vers une copie obsolète de la objet. Par conséquent, il est important que vous relâchiez vos références dès que vous avez terminé avec le rendez-vous périodique.</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="dae2e-102">
          <para> Unlike most of the other Microsoft Outlook objects, the <b>Exception</b> object is a read-only object. This means that you cannot create an <b>Exception</b> object but, rather, the object is created when a property of an <b>AppointmentItem</b> is altered. For example, if you change the <see cref="P:Microsoft.Office.Interop.Outlook._AppointmentItem.Start" />  property of one <b>AppointmentItem</b>, you have created an <b>Exception</b> in <b>AppointmentItem.RecurrencePattern.Exceptions</b>.</para>
          <para>
            <b>Note</b>: The <see cref="T:Microsoft.Office.Interop.Outlook.Exceptions" />  object is on the <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> , not the <b>AppointmentItem</b> object itself.</para>
          <para>When you work with recurring appointment items, you should release any prior references, obtain new references to the recurring appointment item before you access or modify the item, and release these references as soon as you are finished and have saved the changes. This practice applies to the recurring <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> object, and any <see cref="T:Microsoft.Office.Interop.Outlook.Exception" /> or <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> object. To release a reference in Visual Basic, set that existing object to <b>Nothing</b>. In C#, explicitly release the memory for that object. </para>
          <para>Note that even after you release your reference and attempt to obtain a new reference, if there is still an active reference, held by another add-in or Outlook, to one of the above objects, your new reference will still point to an out-of-date copy of the object. Therefore, it is important that you release your references as soon as you are finished with the recurring appointment.</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Exception.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Application ^ Application { Microsoft::Office::Interop::Outlook::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae2e-103">Renvoie un <see cref="T:Microsoft.Office.Interop.Outlook.Application" /> object qui représente l’application Outlook de l’objet parent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae2e-103">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Application" />  object that represents the parent Outlook application for the  object.</span>
          </span>
          <span data-ttu-id="dae2e-104">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae2e-104">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppointmentItem">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.AppointmentItem AppointmentItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.AppointmentItem AppointmentItem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Exception.AppointmentItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppointmentItem As AppointmentItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::AppointmentItem ^ AppointmentItem { Microsoft::Office::Interop::Outlook::AppointmentItem ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.AppointmentItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae2e-105">Renvoie le <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> objet qui constitue l’exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae2e-105">Returns the <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" />  object that is the exception.</span>
          </span>
          <span data-ttu-id="dae2e-106">Non valide pour les rendez-vous supprimés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae2e-106">Not valid for deleted appointments.</span>
          </span>
          <span data-ttu-id="dae2e-107">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae2e-107">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="dae2e-108">
            <para>Lorsque vous travaillez avec des éléments de rendez-vous périodiques, vous devez libérer tout avant références, obtenir de nouvelles références à l’élément de rendez-vous périodiques avant d’accéder ou modifier l’élément et libérer les références dès que vous avez terminé et que vous avez enregistré le modifications apportées. Cela s’applique à l’abonnement <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> objet et tous <see cref="T:Microsoft.Office.Interop.Outlook.Exception" /> ou <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> objet. Pour libérer une référence dans Visual Basic, définissez existant de cet objet sur <b>Nothing</b>. En c#, libérer explicitement la mémoire pour cet objet. </para>
            <para>Notez que même après avoir libérer la référence et tenter d’obtenir une référence, s’il existe toujours une référence active, organisée par un autre complément ou Outlook, à un des objets ci-dessus, votre nouvelle référence pointe toujours vers une copie de l’objet obsolète . Par conséquent, il est important que vous relâchiez vos références dès que vous avez terminé avec le rendez-vous périodique.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dae2e-108">
              <para>When you work with recurring appointment items, you should release any prior references, obtain new references to the recurring appointment item before you access or modify the item, and release these references as soon as you are finished and have saved the changes. This practice applies to the recurring <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> object, and any <see cref="T:Microsoft.Office.Interop.Outlook.Exception" /> or <see cref="T:Microsoft.Office.Interop.Outlook.RecurrencePattern" /> object. To release a reference in Visual Basic, set that existing object to <b>Nothing</b>. In C#, explicitly release the memory for that object. </para>
              <para>Note that even after you release your reference and attempt to obtain a new reference, if there is still an active reference, held by another add-in or Outlook, to one of the above objects, your new reference will still point to an out-of-date copy of the object. Therefore, it is important that you release your references as soon as you are finished with the recurring appointment.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlObjectClass Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlObjectClass Class" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Exception.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As OlObjectClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlObjectClass Class { Microsoft::Office::Interop::Outlook::OlObjectClass get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlObjectClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae2e-109">Renvoie un <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constante indiquant la classe de l’objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae2e-109">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constant indicating the object's class.</span>
          </span>
          <span data-ttu-id="dae2e-110">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae2e-110">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public bool Deleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Deleted" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Exception.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Deleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Deleted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8194)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8194)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae2e-111">Renvoie un <b>type Boolean</b> (<b>bool</b> en c#) qui a la <b>valeur True</b> si le <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> a été supprimé de la périodicité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae2e-111">Returns <b>Boolean</b> (<b>bool</b> in C#) that is <b>True</b> if the <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" />  was deleted from the recurring pattern.</span>
          </span>
          <span data-ttu-id="dae2e-112">Lecture seule</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae2e-112">Read-only</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemProperties">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.ItemProperties ItemProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.ItemProperties ItemProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Exception.ItemProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemProperties As ItemProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::ItemProperties ^ ItemProperties { Microsoft::Office::Interop::Outlook::ItemProperties ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64009)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64009)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.ItemProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae2e-113">Cet objet, ce membre ou cette énumération est déconseillé et n'est pas destiné à être utilisé dans votre code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae2e-113">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalDate">
      <MemberSignature Language="C#" Value="public DateTime OriginalDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime OriginalDate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Exception.OriginalDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime OriginalDate { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8192)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8192)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae2e-114">Retourne un <b>DateTime</b> qui indique la date et l’heure de d’origine un <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" /> avant qu’il a été modifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae2e-114">Returns a <b>DateTime</b> indicating the original date and time of an <see cref="T:Microsoft.Office.Interop.Outlook.AppointmentItem" />  before it was altered.</span>
          </span>
          <span data-ttu-id="dae2e-115">Cette propriété renvoie la date d’origine même si l' <b>objet AppointmentItem</b> a été supprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae2e-115">This property will return the original date even if the <b>AppointmentItem</b> has been deleted.</span>
          </span>
          <span data-ttu-id="dae2e-116">Toutefois, elle ne renvoie l’heure d’origine si la suppression s’est produite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae2e-116">However, it will not return the original time if deletion has occurred.</span>
          </span>
          <span data-ttu-id="dae2e-117">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae2e-117">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Exception.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae2e-p106">Renvoie la valeur de type <b>Object</b> parent de l’objet spécifié. En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae2e-p106">Returns the parent <b>Object</b> of the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.NameSpace Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.NameSpace Session" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.Exception.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As NameSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::NameSpace ^ Session { Microsoft::Office::Interop::Outlook::NameSpace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.NameSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dae2e-120">Renvoie le <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" /> objet pour la session active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae2e-120">Returns the <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />  object for the current session.</span>
          </span>
          <span data-ttu-id="dae2e-121">En lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae2e-121">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="dae2e-122">
            <para>La propriété <b>Session</b> et la <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> méthode peut être utilisée de façon interchangeable pour obtenir l’objet <b>NameSpace</b> pour la session active. Les deux membres ont la même fonction. Par exemple, les paires d’instructions suivantes effectuent la même fonction :</para>
            <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
            <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
            <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
            <code>Outlook.NameSpace objSession = Application.Session;</code>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dae2e-122">
              <para>The <b>Session</b> property and the <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> method can be used interchangeably to obtain the <b>NameSpace</b> object for the current session. Both members serve the same purpose. For example, the following pairs of statements perform the same function:</para>
              <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
              <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
              <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
              <code>Outlook.NameSpace objSession = Application.Session;</code>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>